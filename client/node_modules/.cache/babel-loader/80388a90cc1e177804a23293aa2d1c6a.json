{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages/Spin/Spin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport { apiUrl } from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { FormCheckbox, FormInput, Container, Row, Col, Button } from \"shards-react\";\nimport $ from \"jquery\";\nconst SLOTS_PER_REEL = 12; // radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\n\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      showVideo: false,\n      disableSpin: false,\n      screenType: 'spin',\n      items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n    this.createSlots = ring => {\n      var slotAngle = 360 / SLOTS_PER_REEL;\n      var seed = this.getSeed();\n      seed = 2;\n\n      for (var i = 0; i < SLOTS_PER_REEL; i++) {\n        var slot = document.createElement('div');\n        slot.className = 'slot'; // compute and assign the transform for this slot\n\n        var transform = 'rotateX(' + slotAngle * i + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n        slot.style.transform = transform; // setup the number to show inside the slots\n        // the position is randomized to\n        // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n\n        var content = $(slot).append('<img src=\"./images/' + this.state.items[(seed + i) % 5] + '\" class=\"spin-item\"/>'); // add the poster to the row\n\n        ring.append(slot);\n      }\n    };\n\n    this.getSeed = () => {\n      // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n      return Math.floor(Math.random() * SLOTS_PER_REEL);\n    };\n\n    this.spin = () => {\n      this.setState({\n        disableSpin: true\n      });\n      var timer = 2;\n      var maxTimerDelay = 0; //var txt = 'seeds: ';\n\n      for (var i = 1; i < 4; i++) {\n        var oldSeed = -1;\n        /*\n        checking that the old seed from the previous iteration is not the same as the current iteration;\n        if this happens then the reel will not spin at all\n        */\n\n        var oldClass = $('#ring' + i).attr('class');\n\n        if (oldClass.length > 4) {\n          oldSeed = parseInt(oldClass.slice(10));\n          console.log(oldSeed);\n        }\n\n        var seed = this.getSeed();\n\n        while (oldSeed == seed) {\n          seed = this.getSeed();\n        }\n\n        var delay = timer + i * 0.5;\n        $('#ring' + i).css('animation', 'back-spin 1s, spin-' + seed + ' ' + delay + 's').attr('class', 'ring spin-' + seed);\n        console.log(\"delay\" + delay);\n\n        if (maxTimerDelay < delay) {\n          maxTimerDelay = delay;\n        }\n      }\n\n      setTimeout(() => {\n        if (this.state.screenType == 'spinagain') {\n          this.setState({\n            disableSpin: false,\n            showVideo: true\n          });\n        } else {\n          this.setState({\n            disableSpin: false,\n            screenType: 'spinagain'\n          });\n        }\n      }, maxTimerDelay * 1000);\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {}\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.createSlots($('#ring1'));\n    this.createSlots($('#ring2'));\n    this.createSlots($('#ring3'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"spin-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'slot-machine-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.screenType == 'spin' && React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), this.state.screenType == 'spinagain' && React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinagainbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"rotate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ring1\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring2\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring3\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), !this.state.disableSpin && React.createElement(\"div\", {\n      className: 'spin-btn',\n      onClick: this.spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: 'video-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: 'video-view',\n      width: 400,\n      height: 400,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"https://www.youtube.com/watch?v=Vp9_E9gtffM\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user\n  } = state.user;\n  return {\n    user\n  };\n};\n\nexport default connect(mapStateToProps)(Spin);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages/Spin/Spin.js"],"names":["React","Component","connect","actions","BackgroundImage","apiUrl","axios","FormCheckbox","FormInput","Container","Row","Col","Button","$","SLOTS_PER_REEL","REEL_RADIUS","Spin","constructor","props","state","loading","affiliatedWithNapaStore","anInstallerCustomer","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","showVideo","disableSpin","screenType","items","createSlots","ring","slotAngle","seed","getSeed","i","slot","document","createElement","className","transform","style","content","append","Math","floor","random","spin","setState","timer","maxTimerDelay","oldSeed","oldClass","attr","length","parseInt","slice","console","log","delay","css","setTimeout","componentWillReceiveProps","nextProps","nextContext","componentWillMount","componentDidMount","render","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button\n} from \"shards-react\";\nimport $ from \"jquery\";\n\nconst SLOTS_PER_REEL = 12;\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n    state = {\n        loading: false,\n\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n\n        showVideo: false,\n        disableSpin: false,\n        screenType: 'spin',\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n        this.createSlots($('#ring1'));\n        this.createSlots($('#ring2'));\n        this.createSlots($('#ring3'));\n    }\n\n\n    createSlots = (ring) => {\n\n        var slotAngle = 360 / SLOTS_PER_REEL;\n\n        var seed = this.getSeed();\n        seed = 2;\n\n        for (var i = 0; i < SLOTS_PER_REEL; i++) {\n            var slot = document.createElement('div');\n\n            slot.className = 'slot';\n\n            // compute and assign the transform for this slot\n            var transform = 'rotateX(' + (slotAngle * i) + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n\n            slot.style.transform = transform;\n\n            // setup the number to show inside the slots\n            // the position is randomized to\n\n            // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n            var content = $(slot).append('<img src=\"./images/' + this.state.items[((seed + i) % 5)] + '\" class=\"spin-item\"/>');\n\n            // add the poster to the row\n            ring.append(slot);\n        }\n    }\n\n    getSeed = () => {\n        // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n        return Math.floor(Math.random() * (SLOTS_PER_REEL));\n    }\n\n    spin = () => {\n        this.setState({disableSpin: true});\n        var timer = 2;\n        var maxTimerDelay = 0;\n        //var txt = 'seeds: ';\n        for (var i = 1; i < 4; i++) {\n            var oldSeed = -1;\n            /*\n            checking that the old seed from the previous iteration is not the same as the current iteration;\n            if this happens then the reel will not spin at all\n            */\n            var oldClass = $('#ring' + i).attr('class');\n            if (oldClass.length > 4) {\n                oldSeed = parseInt(oldClass.slice(10));\n                console.log(oldSeed);\n            }\n            var seed = this.getSeed();\n            while (oldSeed == seed) {\n                seed = this.getSeed();\n            }\n\n            var delay = timer + i * 0.5;\n            $('#ring' + i)\n                .css('animation', 'back-spin 1s, spin-' + seed + ' ' + (delay) + 's')\n                .attr('class', 'ring spin-' + seed);\n            console.log(\"delay\" + delay);\n            if (maxTimerDelay < delay) {\n                maxTimerDelay = delay;\n            }\n        }\n        setTimeout(() => {\n            if (this.state.screenType == 'spinagain') {\n                this.setState({disableSpin: false, showVideo: true});\n            } else {\n                this.setState({disableSpin: false, screenType: 'spinagain'});\n            }\n        }, maxTimerDelay * 1000);\n\n    }\n\n\n    render() {\n\n\n        return (\n            <div className=\"spin-page-container\">\n                <div className={'slot-machine-container'}>\n                    {\n                        (this.state.screenType == 'spin') && (\n                            <img className={'spin-bg-image'} src={'images/spinbackground.png'}/>\n                        )\n                    }\n                    {\n                        (this.state.screenType == 'spinagain') && (\n                            <img className={'spin-bg-image'} src={'images/spinagainbackground.png'}/>\n                        )\n                    }\n\n                    <div id=\"rotate\">\n                        <div id=\"ring1\" className=\"ring\"></div>\n                        <div id=\"ring2\" className=\"ring\"></div>\n                        <div id=\"ring3\" className=\"ring\"></div>\n                    </div>\n\n\n                    {\n                        !this.state.disableSpin && (\n                            <div className={'spin-btn'} onClick={this.spin}></div>\n                        )\n                    }\n\n                </div>\n\n                <div className={'video-container'}>\n                    <video className={'video-view'}  width={400} height={400} autoPlay>\n                        <source src=\"https://www.youtube.com/watch?v=Vp9_E9gtffM\" type=\"video/mp4\"/>\n                    </video>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    const {user} = state.user;\n    return {\n        user\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n"]},"metadata":{},"sourceType":"module"}