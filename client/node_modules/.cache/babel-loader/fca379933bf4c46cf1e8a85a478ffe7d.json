{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages/Spin/Spin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport { apiUrl } from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { FormCheckbox, FormInput, Container, Row, Col, Button } from \"shards-react\";\nimport $ from \"jquery\";\n\nclass Spin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n    this.credits = 15;\n    this.spinning = 3;\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {}\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  stopSpin() {\n    $('#wheel' + slot).find('img:last').hide().end().find('img:first').animate({\n      top: -spin[slot - 1] * 44\n    }, {\n      duration: 500,\n      easing: 'elasticOut',\n      complete: function () {\n        spinning--;\n\n        if (spinning <= 0) {\n          endSpin();\n        }\n      }\n    });\n  }\n\n  endSpin() {\n    var slotType = slots[0][spin[0]],\n        matches = 1,\n        barMatch = /bar/.test(slotType) ? 1 : 0,\n        winnedCredits = 0,\n        waitToSpin = 10;\n\n    if (slotType == slots[1][spin[1]]) {\n      matches++;\n\n      if (slotType == slots[2][spin[2]]) {\n        matches++;\n      } else if (barMatch != 0 && /bar/.test(slots[2][spin[2]])) {\n        barMatch++;\n      }\n    } else if (barMatch != 0 && /bar/.test(slots[1][spin[1]])) {\n      barMatch++;\n\n      if (/bar/.test(slots[2][spin[2]])) {\n        barMatch++;\n      }\n    }\n\n    if (matches != 3 && barMatch == 3) {\n      slotType = 'anybar';\n      matches = 3;\n    }\n\n    var winnedCredits = slotsTypes[slotType][matches - 1];\n\n    if (winnedCredits > 0) {\n      addCredit(winnedCredits);\n      waitToSpin = 410 + winnedCredits;\n    }\n\n    setTimeout(function () {\n      if (credits == 0) {\n        endSlot();\n      } else {\n        $('#slot-trigger').removeClass('slot-triggerDisabled');\n        this.spinning = false;\n      }\n    }, waitToSpin);\n  }\n\n  spin() {\n    this.blur();\n\n    if (this.spinning == false) {\n      $('#slot-machine .arm').animate({\n        top: '45px',\n        height: '2%'\n      });\n      $('#slot-machine .arm .knob').animate({\n        top: '-20px',\n        height: '20px'\n      });\n      $('#slot-machine .arm-shadow').animate({\n        top: '40px'\n      }, 380);\n      $('#slot-machine .ring1 .shadow, #slot-machine .ring2 .shadow').animate({\n        top: '50%',\n        opacity: 1\n      });\n      this.spinning = 3;\n      credits--;\n      $('#slot-credits').html(credits);\n      spin[0] = parseInt(Math.random() * 23);\n      spin[1] = parseInt(Math.random() * 23);\n      spin[2] = parseInt(Math.random() * 23);\n      $('#slot-trigger').addClass('slot-triggerDisabled');\n      $('img.slotSpinAnimation').show();\n      $('#wheel1 img:first').css('top', -(spin[0] * 44 + 16) + 'px');\n      $('#wheel2 img:first').css('top', -(spin[1] * 44 + 16) + 'px');\n      $('#wheel3 img:first').css('top', -(spin[2] * 44 + 16) + 'px');\n      setTimeout(function () {\n        $('#slot-machine .arm').animate({\n          top: '-25px',\n          height: '50%',\n          overflow: 'visible'\n        });\n        $('#slot-machine .arm .knob').animate({\n          top: '-15px',\n          height: '16px'\n        });\n        $('#slot-machine .arm-shadow').animate({\n          top: '13px'\n        });\n        $('#slot-machine .ring1 .shadow, #slot-machine .ring2 .shadow').animate({\n          top: '0',\n          opacity: 0\n        });\n      }, 500);\n      setTimeout(function () {\n        stopSpin(1);\n      }, 1500 + parseInt(1500 * Math.random()));\n      setTimeout(function () {\n        stopSpin(2);\n      }, 1500 + parseInt(1500 * Math.random()));\n      setTimeout(function () {\n        stopSpin(3);\n      }, 1500 + parseInt(1500 * Math.random()));\n    }\n\n    return false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"spin-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: 'slot-wheels',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: 'wheel1 wheel',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.state.items.map((item, key) => {\n      return React.createElement(\"img\", {\n        src: 'images/' + item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      });\n    })), React.createElement(Col, {\n      className: 'wheel2 wheel',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), this.state.items.map((item, key) => {\n      return React.createElement(\"img\", {\n        src: 'images/' + item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    })), React.createElement(Col, {\n      className: 'wheel3 wheel',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.state.items.map((item, key) => {\n      return React.createElement(\"img\", {\n        src: 'images/' + item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      });\n    })))), React.createElement(\"div\", {\n      className: 'btn-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"SPIN NOW\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user\n  } = state.user;\n  return {\n    user\n  };\n};\n\nexport default connect(mapStateToProps)(Spin);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages/Spin/Spin.js"],"names":["React","Component","connect","actions","BackgroundImage","apiUrl","axios","FormCheckbox","FormInput","Container","Row","Col","Button","$","Spin","state","loading","affiliatedWithNapaStore","anInstallerCustomer","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","items","credits","spinning","componentWillReceiveProps","nextProps","nextContext","componentWillMount","componentDidMount","stopSpin","slot","find","hide","end","animate","top","spin","duration","easing","complete","endSpin","slotType","slots","matches","barMatch","test","winnedCredits","waitToSpin","slotsTypes","addCredit","setTimeout","endSlot","removeClass","blur","height","opacity","html","parseInt","Math","random","addClass","show","css","overflow","render","map","item","key","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button\n} from \"shards-react\";\nimport $ from \"jquery\";\n\nclass Spin extends Component {\n    state = {\n        loading: false,\n\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n    credits = 15;\n    spinning = 3;\n\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    stopSpin() {\n        $('#wheel' + slot)\n            .find('img:last')\n            .hide()\n            .end()\n            .find('img:first')\n            .animate({\n                top: -spin[slot - 1] * 44\n            }, {\n                duration: 500,\n                easing: 'elasticOut',\n                complete: function () {\n\n                    spinning--;\n\n                    if (spinning <= 0) {\n                        endSpin();\n                    }\n\n                }\n            });\n    }\n\n    endSpin() {\n        var slotType = slots[0][spin[0]],\n            matches = 1,\n            barMatch = /bar/.test(slotType) ? 1 : 0,\n            winnedCredits = 0,\n            waitToSpin = 10;\n\n        if (slotType == slots[1][spin[1]]) {\n\n            matches++;\n\n            if (slotType == slots[2][spin[2]]) {\n                matches++;\n            } else if (barMatch != 0 && /bar/.test(slots[2][spin[2]])) {\n                barMatch++;\n            }\n\n        } else if (barMatch != 0 && /bar/.test(slots[1][spin[1]])) {\n\n            barMatch++;\n\n            if (/bar/.test(slots[2][spin[2]])) {\n                barMatch++;\n            }\n\n        }\n\n        if (matches != 3 && barMatch == 3) {\n            slotType = 'anybar';\n            matches = 3;\n        }\n\n        var winnedCredits = slotsTypes[slotType][matches - 1];\n\n        if (winnedCredits > 0) {\n            addCredit(winnedCredits);\n            waitToSpin = 410 + winnedCredits;\n        }\n\n        setTimeout(function () {\n\n            if (credits == 0) {\n                endSlot();\n            } else {\n                $('#slot-trigger').removeClass('slot-triggerDisabled');\n                this.spinning = false;\n            }\n\n        }, waitToSpin);\n    }\n\n    spin() {\n        this.blur();\n\n        if (this.spinning == false) {\n\n            $('#slot-machine .arm').animate({top: '45px', height: '2%'});\n            $('#slot-machine .arm .knob').animate({top: '-20px', height: '20px'});\n            $('#slot-machine .arm-shadow').animate({top: '40px'}, 380);\n            $('#slot-machine .ring1 .shadow, #slot-machine .ring2 .shadow').animate({top: '50%', opacity: 1});\n\n            this.spinning = 3;\n            credits--;\n\n            $('#slot-credits').html(credits);\n\n            spin[0] = parseInt(Math.random() * 23);\n            spin[1] = parseInt(Math.random() * 23);\n            spin[2] = parseInt(Math.random() * 23);\n\n            $('#slot-trigger').addClass('slot-triggerDisabled');\n\n            $('img.slotSpinAnimation').show();\n\n            $('#wheel1 img:first').css('top', -(spin[0] * 44 + 16) + 'px');\n            $('#wheel2 img:first').css('top', -(spin[1] * 44 + 16) + 'px');\n            $('#wheel3 img:first').css('top', -(spin[2] * 44 + 16) + 'px');\n\n            setTimeout(function () {\n                $('#slot-machine .arm').animate({top: '-25px', height: '50%', overflow: 'visible'});\n                $('#slot-machine .arm .knob').animate({top: '-15px', height: '16px'});\n                $('#slot-machine .arm-shadow').animate({top: '13px'});\n                $('#slot-machine .ring1 .shadow, #slot-machine .ring2 .shadow').animate({top: '0', opacity: 0});\n            }, 500);\n\n            setTimeout(function () {\n                stopSpin(1);\n            }, 1500 + parseInt(1500 * Math.random()));\n\n            setTimeout(function () {\n                stopSpin(2);\n            }, 1500 + parseInt(1500 * Math.random()));\n\n            setTimeout(function () {\n                stopSpin(3);\n            }, 1500 + parseInt(1500 * Math.random()));\n\n        }\n\n        return false;\n    }\n\n\n    render() {\n\n\n        return (\n            <div className=\"spin-page-container\">\n                <img className={'spin-bg-image'} src={'images/spinbackground.png'}/>\n                <Container className={'slot-wheels'}>\n                    <Row>\n                        <Col className={'wheel1 wheel'}>\n                            <div className=\"overlay\"></div>\n                            {this.state.items.map((item, key) => {\n                                return (\n                                    <img src={'images/' + item}/>\n                                )\n                            })}\n                        </Col>\n                        <Col className={'wheel2 wheel'}>\n                            <div className=\"overlay\"></div>\n                            {this.state.items.map((item, key) => {\n                                return (\n                                    <img src={'images/' + item}/>\n                                )\n                            })}\n                        </Col>\n                        <Col className={'wheel3 wheel'}>\n                            <div className=\"overlay\"></div>\n                            {this.state.items.map((item, key) => {\n                                return (\n                                    <img src={'images/' + item}/>\n                                )\n                            })}\n                        </Col>\n                    </Row>\n                </Container>\n\n                <div className={'btn-container'}>\n                    <Button>SPIN NOW</Button>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    const {user} = state.user;\n    return {\n        user\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n"]},"metadata":{},"sourceType":"module"}