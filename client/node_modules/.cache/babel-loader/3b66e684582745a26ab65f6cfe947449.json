{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Login.scss\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button, Form, FormGroup, FormInput, Alert } from \"shards-react\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      loading: false,\n      submitted: false\n    };\n\n    this.doLogin = () => {\n      this.setState({\n        submitted: true\n      });\n      const {\n        userName,\n        userPassword\n      } = this.state;\n      const {\n        dispatch\n      } = this.props;\n\n      if (userName && userPassword) {\n        dispatch(actions.doLogin({\n          email: userName,\n          password: userPassword\n        }));\n      }\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    const userStr = localStorage.getItem('user_data');\n\n    try {\n      const user = JSON.parse(userStr);\n\n      if (user) {\n        this.props.history.push(\"/admin/dashboard\");\n      }\n    } catch (e) {}\n  }\n\n  render() {\n    const {\n      loginStatus,\n      user,\n      loginError\n    } = this.props;\n    return React.createElement(LoadingOverlay, {\n      active: loginStatus == -1,\n      spinner: true,\n      text: \"Logging In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Login\",\n      className: \"login-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Login to admin panel\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, loginStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, loginError), loginStatus == 1 && React.createElement(Alert, {\n      theme: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Login Success\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Username\"), React.createElement(FormInput, {\n      id: \"username\",\n      type: 'email',\n      value: this.state.userName,\n      onChange: e => this.setState({\n        userName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.submitted && !this.state.userName && React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Username is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormInput, {\n      id: \"username\",\n      type: \"password\",\n      value: this.state.userPassword,\n      onChange: e => this.setState({\n        userPassword: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), this.state.submitted && !this.state.userPassword && React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Password is required\")))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      squared: true,\n      theme: \"secondary\",\n      onClick: () => {\n        this.doLogin();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    loginStatus,\n    user,\n    error\n  } = state.user;\n  return {\n    loginStatus,\n    user,\n    loginError: error\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Login/Login.js"],"names":["React","Component","connect","actions","Link","LoadingOverlay","Card","CardHeader","CardTitle","CardImg","CardBody","CardFooter","Button","Form","FormGroup","FormInput","Alert","Login","state","userName","userPassword","loading","submitted","doLogin","setState","dispatch","props","email","password","componentWillMount","componentDidMount","userStr","localStorage","getItem","user","JSON","parse","history","push","e","render","loginStatus","loginError","target","value","mapStateToProps","error"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Login.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    Form,\n    FormGroup,\n    FormInput,\n    Alert\n} from \"shards-react\";\n\nclass Login extends Component {\n    state = {\n        userName: \"\",\n        userPassword: \"\",\n        loading: false,\n        submitted: false\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n        const userStr = localStorage.getItem('user_data');\n        try {\n            const user = JSON.parse(userStr);\n            if (user) {\n                this.props.history.push(\"/admin/dashboard\");\n            }\n        } catch (e) {\n\n        }\n    }\n\n    doLogin = () => {\n        this.setState({submitted: true});\n        const {userName, userPassword} = this.state;\n        const {dispatch} = this.props;\n        if (userName && userPassword) {\n            dispatch(actions.doLogin({\n                email: userName,\n                password: userPassword\n            }));\n        }\n    }\n\n    render() {\n        const {loginStatus, user, loginError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={loginStatus == -1}\n                spinner\n                text='Logging In'\n            >\n                <div className=\"login-page-container\">\n                    <Card title=\"Login\" className=\"login-card\">\n                        <CardHeader><h3>Login to admin panel</h3></CardHeader>\n                        <CardBody>\n\n                            {\n                                loginStatus == 0 && (\n                                    <Alert theme=\"danger\">{loginError}</Alert>\n                                )\n                            }\n                            {\n                                loginStatus == 1 && (\n                                    <Alert theme=\"success\">Login Success</Alert>\n                                )\n                            }\n                            <Form>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Username</label>\n                                    <FormInput\n                                        id=\"username\"\n                                        type={'email'}\n                                        value={this.state.userName}\n                                        onChange={(e) => this.setState({userName: e.target.value})}\n                                    />\n\n                                    {\n                                        (this.state.submitted && !this.state.userName) && (\n                                            <div className={'input-error'}>\n                                                Username is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Password</label>\n                                    <FormInput id=\"username\"\n                                               type={\"password\"}\n                                               value={this.state.userPassword}\n                                               onChange={(e) => this.setState({userPassword: e.target.value})}/>\n                                    {\n                                        (this.state.submitted && !this.state.userPassword) && (\n                                            <div className={'input-error'}>\n                                                Password is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                            </Form>\n\n\n                        </CardBody>\n                        <CardFooter>\n                            <Button block squared theme=\"secondary\" onClick={() => {\n                                this.doLogin();\n                            }}>\n                                Login\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {loginStatus, user, error} = state.user;\n    return {\n        loginStatus,\n        user,\n        loginError: error\n    };\n}\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}