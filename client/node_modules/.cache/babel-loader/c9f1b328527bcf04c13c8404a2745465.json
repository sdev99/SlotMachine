{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages-admin/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { faEdit, faTrash, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, InputGroupAddon, InputGroupText, FormInput, Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      rememberMe: false,\n      loading: false,\n      usersData: [1, 2, 3, 4, 5, 6, 7]\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      logginFailed,\n      loggedIn,\n      errorMessage\n    } = this.state;\n    return React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Logging In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: 'navbar-view',\n      type: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"NAPA Panel\"), React.createElement(Nav, {\n      navbar: true,\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      active: true,\n      href: \"#\",\n      onClick: () => {\n        this.props.history.push(\"/admin/login\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Logout\")))), React.createElement(Button, {\n      squared: true,\n      theme: \"secondary\",\n      className: \"export-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Export\"), React.createElement(\"table\", {\n      className: \"table-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"No.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Store Number\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Servicing DC\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Store Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Store Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Options\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.usersData.map((data, key) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, key + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Test User\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"test.one@gmail.com\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"11212\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"test dc\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Test Store\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Test Address\"), React.createElement(\"td\", {\n        className: 'options',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: 'option-btn',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: 'option-btn delete',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: 'option-btn detail',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faChevronRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))));\n    })))), React.createElement(Modal, {\n      open: open,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Header\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\uD83D\\uDC4B Hello there!\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/src/pages-admin/Dashboard/Dashboard.js"],"names":["React","Component","connect","actions","Link","LoadingOverlay","faEdit","faTrash","faChevronRight","FontAwesomeIcon","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupAddon","InputGroupText","FormInput","Button","Modal","ModalBody","ModalHeader","Dashboard","state","userName","userPassword","rememberMe","loading","usersData","componentWillMount","componentDidMount","render","logginFailed","loggedIn","errorMessage","props","history","push","map","data","key","open","toggle","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {faEdit, faTrash, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Button,\n    Modal,\n    ModalBody,\n    ModalHeader\n} from \"shards-react\";\n\nclass Dashboard extends Component {\n    state = {\n        userName: \"\",\n        userPassword: \"\",\n        rememberMe: false,\n        loading: false,\n        usersData: [1, 2, 3, 4, 5, 6, 7]\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        const {logginFailed, loggedIn, errorMessage} = this.state;\n\n        return (\n            <LoadingOverlay\n                active={this.state.loading}\n                spinner\n                text='Logging In'\n            >\n                <div className=\"dashboard-page-container\">\n                    <Navbar className={'navbar-view'} type=\"dark\">\n                        <NavbarBrand href=\"#\">NAPA Panel</NavbarBrand>\n\n                        <Nav navbar className=\"ml-auto\">\n                            <NavItem>\n                                <NavLink active href=\"#\" onClick={() => {\n                                    this.props.history.push(\"/admin/login\");\n                                }}>\n                                    Logout\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar>\n\n                    <Button squared theme=\"secondary\" className={\"export-btn\"}>\n                        Export\n                    </Button>\n\n                    <table className={\"table-view\"}>\n                        <tr>\n                            <th>No.</th>\n                            <th>Full Name</th>\n                            <th>Email</th>\n                            <th>Store Number</th>\n                            <th>Servicing DC</th>\n                            <th>Store Name</th>\n                            <th>Store Address</th>\n                            <th>Options</th>\n                        </tr>\n                        <tbody>\n                        {\n                            this.state.usersData.map((data, key) => {\n                                return (\n                                    <tr>\n                                        <td>{key + 1}</td>\n                                        <td>Test User</td>\n                                        <td>test.one@gmail.com</td>\n                                        <td>11212</td>\n                                        <td>test dc</td>\n                                        <td>Test Store</td>\n                                        <td>Test Address</td>\n                                        <td className={'options'}>\n                                            <Button className={'option-btn'}><FontAwesomeIcon icon={faEdit}/></Button>\n                                            <Button className={'option-btn delete'}><FontAwesomeIcon\n                                                icon={faTrash}/></Button>\n                                            <Button className={'option-btn detail'}><FontAwesomeIcon\n                                                icon={faChevronRight}/></Button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <Modal open={open} toggle={this.toggle}>\n                    <ModalHeader>Header</ModalHeader>\n                    <ModalBody>👋 Hello there!</ModalBody>\n                </Modal>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}