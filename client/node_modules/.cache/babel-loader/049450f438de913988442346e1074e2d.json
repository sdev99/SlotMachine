{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { faEdit, faTrash, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, InputGroupAddon, InputGroupText, FormInput, Button, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col, Alert, FormCheckbox } from \"shards-react\";\nimport { napaProducts } from \"../../constants\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      fullName: \"\",\n      emailAddress: \"\",\n      storeNumber: \"\",\n      servicingDC: \"\",\n      storeName: \"\",\n      storeAddress: \"\",\n      businessName: \"\",\n      businessAddress: \"\",\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      formErrors: null,\n      showConfirmDeleteModal: false,\n      showUserDataModel: false,\n      selectedUserData: null\n    };\n\n    this.getUsersDataList = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(actions.userDataList({})).then(() => {});\n    };\n\n    this.deleteUserData = userDataId => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(actions.deleteUserData({\n        id: userDataId\n      })).then(() => {\n        setTimeout(() => {\n          const {\n            dataDeleteStatus\n          } = this.props;\n\n          if (dataDeleteStatus === 1) {\n            this.setState({\n              showConfirmDeleteModal: false\n            });\n          }\n        }, 500);\n      });\n    };\n\n    this.showEditUserDataModal = data => {\n      let states = {\n        showUserDataModel: true,\n        selectedUserData: data,\n        affiliatedWithNapaStore: data.user_type == 'affiliated_with_napa_store',\n        anInstallerCustomer: data.user_type == 'installer_customer',\n        fullName: data.name,\n        emailAddress: data.email,\n        storeNumber: data.store_number,\n        servicingDC: data.servicing_dc,\n        storeName: data.store_name,\n        storeAddress: data.store_address,\n        businessName: data.business_name,\n        businessAddress: data.business_address,\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null\n      };\n      const products = data.products_buying.split(\"|\");\n      products.map(product => {\n        if (product === napaProducts.napaNewElectrical) {\n          states['napaNewElectrical'] = true;\n        }\n\n        if (product === napaProducts.wilson) {\n          states['wilson'] = true;\n        }\n\n        if (product === napaProducts.premiumPlus) {\n          states['premiumPlus'] = true;\n        }\n\n        if (product === napaProducts.premiumSteering) {\n          states['premiumSteering'] = true;\n        }\n\n        if (product === napaProducts.powerSupport) {\n          states['powerSupport'] = true;\n        }\n\n        if (product === napaProducts.newSteering) {\n          states['newSteering'] = true;\n        }\n      });\n      this.setState(states);\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    const userStr = localStorage.getItem('user_data');\n\n    if (userStr) {\n      try {\n        const user = JSON.parse(userStr);\n\n        if (user.id && user.email) {\n          this.getUsersDataList();\n        } else {\n          this.props.history.push(\"/admin/login\");\n        }\n      } catch (e) {\n        this.props.history.push(\"/admin/login\");\n      }\n    } else {\n      this.props.history.push(\"/admin/login\");\n    }\n  }\n\n  render() {\n    const {\n      dataListStatus,\n      userDataList,\n      dataListError,\n      dataDeleteStatus,\n      dataDeleteError\n    } = this.props;\n    const {\n      dataUpdatingStatus,\n      dataUpdatingError\n    } = this.props;\n    return React.createElement(LoadingOverlay, {\n      active: dataListStatus === -1 || dataDeleteStatus === -1,\n      spinner: true,\n      text: \"Fetching\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: 'navbar-view',\n      type: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"NAPA Panel\"), React.createElement(Nav, {\n      navbar: true,\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      active: true,\n      href: \"#\",\n      onClick: () => {\n        this.props.history.push(\"/admin/login\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Logout\")))), React.createElement(Button, {\n      squared: true,\n      theme: \"secondary\",\n      className: \"export-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Export\"), React.createElement(\"table\", {\n      className: \"table-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"No.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Products Buying\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Options\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, userDataList && userDataList.map((data, key) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, key + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, data.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, data.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, data.products_buying), React.createElement(\"td\", {\n        className: 'options',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: 'option-btn',\n        onClick: () => {\n          this.showEditUserDataModal(data);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: 'option-btn delete',\n        onClick: () => {\n          this.setState({\n            showConfirmDeleteModal: true,\n            selectedUserData: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))));\n    })))), React.createElement(Modal, {\n      centered: true,\n      className: 'userdata-edit-modal',\n      open: this.state.showUserDataModel,\n      toggle: () => {\n        this.setState({\n          showUserDataModel: !this.state.showUserDataModel\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Edit User Data\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: 'option-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"ARE YOU?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.affiliatedWithNapaStore,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: true,\n          anInstallerCustomer: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"affiliated with a NAPA store\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.anInstallerCustomer,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: false,\n          anInstallerCustomer: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"an installer customer\")))), React.createElement(Container, {\n      className: 'input-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Full Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.fullName,\n      onChange: e => this.setState({\n        fullName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.state.formErrors['name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Email address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      type: \"email\",\n      value: this.state.emailAddress,\n      onChange: e => this.setState({\n        emailAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['email'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.formErrors['email']))), this.state.affiliatedWithNapaStore && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Store number\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeNumber,\n      onChange: e => this.setState({\n        storeNumber: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_number'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, this.state.formErrors['store_number']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Servicing DC\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.servicingDC,\n      onChange: e => this.setState({\n        servicingDC: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['servicing_dc'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, this.state.formErrors['servicing_dc']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Store Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeName,\n      onChange: e => this.setState({\n        storeName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, this.state.formErrors['store_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Store address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeAddress,\n      onChange: e => this.setState({\n        storeAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, this.state.formErrors['store_address'])))), this.state.anInstallerCustomer && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Business Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessName,\n      onChange: e => this.setState({\n        businessName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, this.state.formErrors['business_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"Business Address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessAddress,\n      onChange: e => this.setState({\n        businessAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, this.state.formErrors['business_address']))))), React.createElement(Container, {\n      className: 'product-choose-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.napaNewElectrical,\n      onChange: e => {\n        this.setState({\n          napaNewElectrical: !this.state.napaNewElectrical\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, napaProducts.napaNewElectrical)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.wilson,\n      onChange: e => {\n        this.setState({\n          wilson: !this.state.wilson\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, napaProducts.wilson))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumPlus,\n      onChange: e => {\n        this.setState({\n          premiumPlus: !this.state.premiumPlus\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, napaProducts.premiumPlus)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumSteering,\n      onChange: e => {\n        this.setState({\n          premiumSteering: !this.state.premiumSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, napaProducts.premiumSteering))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.powerSupport,\n      onChange: e => {\n        this.setState({\n          powerSupport: !this.state.powerSupport\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, napaProducts.powerSupport)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.newSteering,\n      onChange: e => {\n        this.setState({\n          newSteering: !this.state.newSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, napaProducts.newSteering)))), dataUpdatingStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, dataUpdatingError))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'play-btn',\n      onClick: () => {\n        this.setState({\n          showUserDataModel: false\n        });\n      },\n      theme: 'success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      theme: 'dark',\n      className: 'play-btn',\n      onClick: () => {\n        this.setState({\n          showUserDataModel: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Modal, {\n      open: this.state.showConfirmDeleteModal,\n      toggle: () => {\n        this.setState({\n          showConfirmDeleteModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, \"Confirm!\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, \"Do you really want to remove this user data?\", dataDeleteStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, dataDeleteError)), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(Button, {\n      theme: 'danger',\n      onClick: () => {\n        this.deleteUserData(this.state.selectedUserData._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, \"YES\"), React.createElement(Button, {\n      theme: 'dark',\n      onClick: () => {\n        this.setState({\n          showConfirmDeleteModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, \"NO\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    dataListStatus,\n    dataDeleteStatus,\n    userDataList,\n    dataListError,\n    dataDeleteError\n  } = state.user;\n  return {\n    dataListStatus,\n    dataDeleteStatus,\n    userDataList,\n    dataListError,\n    dataDeleteError\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Dashboard/Dashboard.js"],"names":["React","Component","connect","actions","Link","LoadingOverlay","faEdit","faTrash","faChevronRight","FontAwesomeIcon","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupAddon","InputGroupText","FormInput","Button","Modal","ModalBody","ModalHeader","ModalFooter","Container","Row","Col","Alert","FormCheckbox","napaProducts","Dashboard","state","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","formErrors","showConfirmDeleteModal","showUserDataModel","selectedUserData","getUsersDataList","dispatch","props","userDataList","then","deleteUserData","userDataId","id","setTimeout","dataDeleteStatus","setState","showEditUserDataModal","data","states","user_type","name","email","store_number","servicing_dc","store_name","store_address","business_name","business_address","products","products_buying","split","map","product","componentWillMount","componentDidMount","userStr","localStorage","getItem","user","JSON","parse","history","push","e","render","dataListStatus","dataListError","dataDeleteError","dataUpdatingStatus","dataUpdatingError","key","target","value","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {faEdit, faTrash, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Button,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    ModalFooter,\n    Container,\n    Row,\n    Col,\n    Alert,\n    FormCheckbox\n} from \"shards-react\";\nimport {napaProducts} from \"../../constants\";\n\nclass Dashboard extends Component {\n    state = {\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null,\n\n        showConfirmDeleteModal: false,\n        showUserDataModel: false,\n\n        selectedUserData: null\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n        const userStr = localStorage.getItem('user_data');\n        if (userStr) {\n            try {\n                const user = JSON.parse(userStr);\n                if (user.id && user.email) {\n                    this.getUsersDataList();\n                } else {\n                    this.props.history.push(\"/admin/login\");\n                }\n            } catch (e) {\n                this.props.history.push(\"/admin/login\");\n            }\n        } else {\n            this.props.history.push(\"/admin/login\");\n        }\n    }\n\n    getUsersDataList = () => {\n        const {dispatch} = this.props;\n        dispatch(actions.userDataList({})).then(() => {\n\n        });\n    }\n\n    deleteUserData = (userDataId) => {\n        const {dispatch} = this.props;\n        dispatch(actions.deleteUserData({\n            id: userDataId\n        })).then(() => {\n            setTimeout(() => {\n                const {dataDeleteStatus} = this.props;\n                if (dataDeleteStatus === 1) {\n                    this.setState({showConfirmDeleteModal: false});\n                }\n            }, 500);\n        });\n    }\n\n\n    showEditUserDataModal = (data) => {\n\n\n        let states = {\n            showUserDataModel: true,\n            selectedUserData: data,\n\n            affiliatedWithNapaStore: (data.user_type == 'affiliated_with_napa_store'),\n            anInstallerCustomer: (data.user_type == 'installer_customer'),\n\n            fullName: data.name,\n            emailAddress:data.email,\n\n            storeNumber: data.store_number,\n            servicingDC: data.servicing_dc,\n            storeName: data.store_name,\n            storeAddress: data.store_address,\n\n            businessName: data.business_name,\n            businessAddress: data.business_address,\n\n            napaNewElectrical: false,\n            wilson: false,\n            premiumPlus: false,\n            premiumSteering: false,\n            powerSupport: false,\n            newSteering: false,\n            formErrors: null,\n        };\n\n        const products = data.products_buying.split(\"|\");\n\n        products.map((product)=>{\n            if(product === napaProducts.napaNewElectrical) {\n                states['napaNewElectrical'] = true;\n            }\n            if(product === napaProducts.wilson) {\n                states['wilson'] = true;\n            }\n            if(product === napaProducts.premiumPlus) {\n                states['premiumPlus'] = true;\n            }\n            if(product === napaProducts.premiumSteering) {\n                states['premiumSteering'] = true;\n            }\n            if(product === napaProducts.powerSupport) {\n                states['powerSupport'] = true;\n            }\n            if(product === napaProducts.newSteering) {\n                states['newSteering'] = true;\n            }\n\n        });\n\n        this.setState(states);\n    }\n\n    render() {\n        const {dataListStatus, userDataList, dataListError, dataDeleteStatus, dataDeleteError} = this.props;\n        const {dataUpdatingStatus, dataUpdatingError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={dataListStatus === -1 || dataDeleteStatus === -1}\n                spinner\n                text='Fetching'\n            >\n                <div className=\"dashboard-page-container\">\n                    <Navbar className={'navbar-view'} type=\"dark\">\n                        <NavbarBrand href=\"#\">NAPA Panel</NavbarBrand>\n\n                        <Nav navbar className=\"ml-auto\">\n                            <NavItem>\n                                <NavLink active href=\"#\" onClick={() => {\n                                    this.props.history.push(\"/admin/login\");\n                                }}>\n                                    Logout\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar>\n\n                    <Button squared theme=\"secondary\" className={\"export-btn\"}>\n                        Export\n                    </Button>\n\n                    <table className={\"table-view\"}>\n                        <tr>\n                            <th>No.</th>\n                            <th>User Type</th>\n                            <th>Full Name</th>\n                            <th>Email</th>\n                            <th>Products Buying</th>\n                            <th>Options</th>\n                        </tr>\n                        <tbody>\n                        {\n                            userDataList && userDataList.map((data, key) => {\n                                return (\n                                    <tr>\n                                        <td>{key + 1}</td>\n                                        <td>{data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'}</td>\n                                        <td>{data.name}</td>\n                                        <td>{data.email}</td>\n                                        <td>{data.products_buying}</td>\n                                        <td className={'options'}>\n                                            <Button className={'option-btn'} onClick={() => {\n                                                this.showEditUserDataModal(data);\n                                            }}><FontAwesomeIcon icon={faEdit}/></Button>\n                                            <Button className={'option-btn delete'} onClick={() => {\n                                                this.setState({\n                                                    showConfirmDeleteModal: true,\n                                                    selectedUserData: data,\n                                                });\n                                            }}><FontAwesomeIcon\n                                                icon={faTrash}/></Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <Modal centered={true} className={'userdata-edit-modal'} open={this.state.showUserDataModel}\n                       toggle={() => {\n                           this.setState({showUserDataModel: !this.state.showUserDataModel});\n                       }}>\n                    <ModalHeader>Edit User Data</ModalHeader>\n                    <ModalBody>\n                        <div className={'form-container'}>\n                            <Container className={'option-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            ARE YOU?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.affiliatedWithNapaStore}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: true,\n                                                    anInstallerCustomer: false\n                                                });\n                                            }}\n                                        >affiliated with a NAPA store</FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.anInstallerCustomer}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: false,\n                                                    anInstallerCustomer: true\n                                                });\n                                            }}\n                                        >\n                                            an installer customer\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n                            </Container>\n\n                            <Container className={'input-form'}>\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Full Name</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.fullName}\n                                            onChange={(e) => this.setState({fullName: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['name']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['name']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Email address</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            type={\"email\"}\n                                            value={this.state.emailAddress}\n                                            onChange={(e) => this.setState({emailAddress: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['email']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['email']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.affiliatedWithNapaStore && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store number</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeNumber}\n                                                        onChange={(e) => this.setState({storeNumber: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_number']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_number']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Servicing DC</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.servicingDC}\n                                                        onChange={(e) => this.setState({servicingDC: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['servicing_dc']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeName}\n                                                        onChange={(e) => this.setState({storeName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store address</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeAddress}\n                                                        onChange={(e) => this.setState({storeAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.anInstallerCustomer && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessName}\n                                                        onChange={(e) => this.setState({businessName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Address</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessAddress}\n                                                        onChange={(e) => this.setState({businessAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                            </Container>\n\n\n                            <Container className={'product-choose-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.napaNewElectrical}\n                                            onChange={e => {\n                                                this.setState({napaNewElectrical: !this.state.napaNewElectrical});\n                                            }}\n                                        >\n                                            {napaProducts.napaNewElectrical}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.wilson}\n                                            onChange={e => {\n                                                this.setState({wilson: !this.state.wilson});\n                                            }}\n                                        >\n                                            {napaProducts.wilson}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumPlus}\n                                            onChange={e => {\n                                                this.setState({premiumPlus: !this.state.premiumPlus});\n                                            }}\n                                        >\n                                            {napaProducts.premiumPlus}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumSteering}\n                                            onChange={e => {\n                                                this.setState({premiumSteering: !this.state.premiumSteering});\n                                            }}\n                                        >\n                                            {napaProducts.premiumSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.powerSupport}\n                                            onChange={e => {\n                                                this.setState({powerSupport: !this.state.powerSupport});\n                                            }}\n                                        >\n                                            {napaProducts.powerSupport}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.newSteering}\n                                            onChange={e => {\n                                                this.setState({newSteering: !this.state.newSteering});\n                                            }}\n                                        >\n                                            {napaProducts.newSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                            </Container>\n\n                            {\n                                dataUpdatingStatus == 0 && (\n                                    <Alert theme=\"danger\">{dataUpdatingError}</Alert>\n                                )\n                            }\n\n\n\n                        </div>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button className={'play-btn'} onClick={() => {\n                            this.setState({showUserDataModel: false});\n                        }} theme={'success'}>Save</Button>\n                        <Button theme={'dark'} className={'play-btn'} onClick={() => {\n                            this.setState({showUserDataModel: false});\n                        }}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n\n                <Modal open={this.state.showConfirmDeleteModal} toggle={() => {\n                    this.setState({showConfirmDeleteModal: false})\n                }}>\n                    <ModalHeader>Confirm!</ModalHeader>\n                    <ModalBody>\n                        Do you really want to remove this user data?\n                        {\n                            dataDeleteStatus == 0 && (\n                                <Alert theme=\"danger\">{dataDeleteError}</Alert>\n                            )\n                        }\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button theme={'danger'} onClick={() => {\n                            this.deleteUserData(this.state.selectedUserData._id);\n                        }}>YES</Button>\n                        <Button theme={'dark'} onClick={() => {\n                            this.setState({showConfirmDeleteModal: false});\n                        }}>NO</Button>\n                    </ModalFooter>\n                </Modal>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataListStatus, dataDeleteStatus, userDataList, dataListError, dataDeleteError} = state.user;\n    return {\n        dataListStatus,\n        dataDeleteStatus,\n        userDataList,\n        dataListError,\n        dataDeleteError\n    };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}