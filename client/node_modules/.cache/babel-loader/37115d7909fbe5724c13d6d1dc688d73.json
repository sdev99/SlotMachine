{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { faEdit, faTrash, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CSVLink } from \"react-csv\";\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, InputGroupAddon, InputGroupText, FormInput, Button, Modal, ModalBody, ModalHeader, ModalFooter, Container, Row, Col, Alert, FormCheckbox } from \"shards-react\";\nimport { napaProducts } from \"../../constants\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      fullName: \"\",\n      emailAddress: \"\",\n      storeNumber: \"\",\n      servicingDC: \"\",\n      storeName: \"\",\n      storeAddress: \"\",\n      businessName: \"\",\n      businessAddress: \"\",\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      formErrors: null,\n      showConfirmDeleteModal: false,\n      showUserDataModel: false,\n      selectedUserData: null\n    };\n\n    this.getUsersDataList = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(actions.userDataList({})).then(() => {});\n    };\n\n    this.deleteUserData = userDataId => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(actions.deleteUserData({\n        id: userDataId\n      })).then(() => {\n        setTimeout(() => {\n          const {\n            dataDeleteStatus\n          } = this.props;\n\n          if (dataDeleteStatus === 1) {\n            this.setState({\n              showConfirmDeleteModal: false\n            });\n          }\n        }, 500);\n      });\n    };\n\n    this.updateUserData = () => {\n      const {\n        selectedUserData\n      } = this.state;\n      const {\n        affiliatedWithNapaStore,\n        anInstallerCustomer,\n        fullName,\n        emailAddress\n      } = this.state;\n      const {\n        storeNumber,\n        servicingDC,\n        storeName,\n        storeAddress\n      } = this.state;\n      const {\n        businessName,\n        businessAddress\n      } = this.state;\n      const {\n        napaNewElectrical,\n        wilson,\n        premiumPlus,\n        premiumSteering,\n        powerSupport,\n        newSteering\n      } = this.state;\n      var errors = {};\n\n      if (!fullName) {\n        errors['name'] = \"Full name is required\";\n      }\n\n      if (!emailAddress) {\n        errors['email'] = \"Email address is required\";\n      } else if (!this.validateEmail(emailAddress)) {\n        errors['email'] = \"Email address is not valid\";\n      }\n\n      if (affiliatedWithNapaStore) {\n        if (!storeNumber) {\n          errors['store_number'] = \"Store number is required\";\n        }\n\n        if (!servicingDC) {\n          errors['servicing_dc'] = \"Servicing DC is required\";\n        }\n\n        if (!storeName) {\n          errors['store_name'] = \"Store name is required\";\n        }\n\n        if (!storeAddress) {\n          errors['store_address'] = \"Store address is required\";\n        }\n      } else if (anInstallerCustomer) {\n        if (!businessName) {\n          errors['business_name'] = \"Business name is required\";\n        }\n\n        if (!businessAddress) {\n          errors['business_address'] = \"Business address is required\";\n        }\n      } else {\n        errors['user_type'] = \"Select who are you?\";\n      }\n\n      if (Object.keys(errors).length == 0) {\n        let postData = {\n          id: selectedUserData._id,\n          user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n          name: fullName,\n          email: emailAddress\n        };\n\n        if (affiliatedWithNapaStore) {\n          postData['store_number'] = storeNumber;\n          postData['servicing_dc'] = servicingDC;\n          postData['store_name'] = storeName;\n          postData['store_address'] = storeAddress;\n        } else if (anInstallerCustomer) {\n          postData['business_name'] = businessName;\n          postData['business_address'] = businessAddress;\n        }\n\n        let products = [];\n\n        if (napaNewElectrical) {\n          products.push(napaProducts.napaNewElectrical);\n        }\n\n        if (wilson) {\n          products.push(napaProducts.wilson);\n        }\n\n        if (premiumPlus) {\n          products.push(napaProducts.premiumPlus);\n        }\n\n        if (premiumSteering) {\n          products.push(napaProducts.premiumSteering);\n        }\n\n        if (powerSupport) {\n          products.push(napaProducts.powerSupport);\n        }\n\n        if (newSteering) {\n          products.push(napaProducts.newSteering);\n        }\n\n        postData['products_buying'] = products.join(\"|\");\n        const {\n          dispatch\n        } = this.props;\n        dispatch(actions.updateUserData(postData)).then(() => {\n          setTimeout(() => {\n            const {\n              dataUpdateStatus\n            } = this.props;\n\n            if (dataUpdateStatus === 1) {\n              this.closeUserModal();\n            }\n          }, 500);\n        });\n      } else {\n        this.setState({\n          formErrors: errors\n        });\n      }\n    };\n\n    this.closeUserModal = () => {\n      this.setState({\n        showUserDataModel: false,\n        selectedUserData: null,\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n        fullName: \"\",\n        emailAddress: \"\",\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n        businessName: \"\",\n        businessAddress: \"\",\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null\n      });\n    };\n\n    this.showEditUserDataModal = data => {\n      let states = {\n        showUserDataModel: true,\n        selectedUserData: data,\n        affiliatedWithNapaStore: data.user_type == 'affiliated_with_napa_store',\n        anInstallerCustomer: data.user_type == 'installer_customer',\n        fullName: data.name,\n        emailAddress: data.email,\n        storeNumber: data.store_number,\n        servicingDC: data.servicing_dc,\n        storeName: data.store_name,\n        storeAddress: data.store_address,\n        businessName: data.business_name,\n        businessAddress: data.business_address,\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null\n      };\n      const products = data.products_buying.split(\"|\");\n      products.map(product => {\n        if (product === napaProducts.napaNewElectrical) {\n          states['napaNewElectrical'] = true;\n        }\n\n        if (product === napaProducts.wilson) {\n          states['wilson'] = true;\n        }\n\n        if (product === napaProducts.premiumPlus) {\n          states['premiumPlus'] = true;\n        }\n\n        if (product === napaProducts.premiumSteering) {\n          states['premiumSteering'] = true;\n        }\n\n        if (product === napaProducts.powerSupport) {\n          states['powerSupport'] = true;\n        }\n\n        if (product === napaProducts.newSteering) {\n          states['newSteering'] = true;\n        }\n      });\n      this.setState(states);\n    };\n\n    this.formatCsvExport = list => {\n      let formattedData = [['No.', 'User Type', 'Full Name', 'Email Address', 'Product Buying', 'Store Number', 'Servicing DC', 'Store Name', 'Store Address', 'Business Name', 'Business Address', 'Date']];\n\n      if (list) {\n        list.map((data, key) => {\n          formattedData.push([key + 1, data.user_type, data.name, data.email, data.products_buying, data.store_number, data.servicing_dc, data.store_name, data.store_address, data.business_name, data.business_address, data.Created_date]);\n        });\n      }\n\n      console.log(JSON.stringify(formattedData));\n      return formattedData;\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    const userStr = localStorage.getItem('user_data');\n\n    if (userStr) {\n      try {\n        const user = JSON.parse(userStr);\n\n        if (user.id && user.email) {\n          this.getUsersDataList();\n        } else {\n          this.props.history.push(\"/admin/login\");\n        }\n      } catch (e) {\n        this.props.history.push(\"/admin/login\");\n      }\n    } else {\n      this.props.history.push(\"/admin/login\");\n    }\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  render() {\n    const {\n      dataListStatus,\n      userDataList,\n      dataListError,\n      dataDeleteStatus,\n      dataDeleteError\n    } = this.props;\n    const {\n      dataUpdateStatus,\n      dataUpdateError\n    } = this.props;\n    let csvData = this.formatCsvExport(userDataList);\n    const headers = [{\n      label: 'First Name',\n      key: 'details.firstName'\n    }, {\n      label: 'Last Name',\n      key: 'details.lastName'\n    }, {\n      label: 'Job',\n      key: 'job'\n    }];\n    const data = [{\n      details: {\n        firstName: 'Ahmed',\n        lastName: 'Tomi'\n      },\n      job: 'manager'\n    }, {\n      details: {\n        firstName: 'John',\n        lastName: 'Jones'\n      },\n      job: 'developer'\n    }];\n    return React.createElement(LoadingOverlay, {\n      active: dataListStatus === -1 || dataDeleteStatus === -1 || dataUpdateStatus === -1,\n      spinner: true,\n      text: \"Connecting...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: 'navbar-view',\n      type: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"NAPA Panel\"), React.createElement(Nav, {\n      navbar: true,\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      active: true,\n      href: \"#\",\n      onClick: () => {\n        localStorage.removeItem('user_data');\n        this.props.history.push(\"/admin/login\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Logout\")))), userDataList && userDataList.length > 0 && React.createElement(CSVLink, {\n      data: csvData,\n      asyncOnClick: true,\n      target: \"_blank\",\n      filename: 'napa_user_list.csv',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Button, {\n      squared: true,\n      theme: \"secondary\",\n      className: \"export-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Export\")), React.createElement(CSVLink, {\n      data: data,\n      headers: headers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Download me\"), React.createElement(\"table\", {\n      className: \"table-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"No.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Products Buying\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Options\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, userDataList && userDataList.map((data, key) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, key + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, data.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, data.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, data.products_buying), React.createElement(\"td\", {\n        className: 'options',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: 'option-btn',\n        onClick: () => {\n          this.showEditUserDataModal(data);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: 'option-btn delete',\n        onClick: () => {\n          this.setState({\n            showConfirmDeleteModal: true,\n            selectedUserData: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }))));\n    })))), React.createElement(Modal, {\n      centered: true,\n      className: 'userdata-edit-modal',\n      open: this.state.showUserDataModel,\n      toggle: () => {\n        this.setState({\n          showUserDataModel: !this.state.showUserDataModel\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Edit User Data\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: 'option-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"ARE YOU?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.affiliatedWithNapaStore,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: true,\n          anInstallerCustomer: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"affiliated with a NAPA store\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.anInstallerCustomer,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: false,\n          anInstallerCustomer: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"an installer customer\")))), React.createElement(Container, {\n      className: 'input-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, \"Full Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.fullName,\n      onChange: e => this.setState({\n        fullName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, this.state.formErrors['name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Email address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      type: \"email\",\n      value: this.state.emailAddress,\n      onChange: e => this.setState({\n        emailAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['email'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, this.state.formErrors['email']))), this.state.affiliatedWithNapaStore && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"Store number\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeNumber,\n      onChange: e => this.setState({\n        storeNumber: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_number'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, this.state.formErrors['store_number']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"Servicing DC\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.servicingDC,\n      onChange: e => this.setState({\n        servicingDC: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['servicing_dc'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, this.state.formErrors['servicing_dc']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, \"Store Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeName,\n      onChange: e => this.setState({\n        storeName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, this.state.formErrors['store_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, \"Store address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeAddress,\n      onChange: e => this.setState({\n        storeAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, this.state.formErrors['store_address'])))), this.state.anInstallerCustomer && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, \"Business Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessName,\n      onChange: e => this.setState({\n        businessName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, this.state.formErrors['business_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, \"Business Address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessAddress,\n      onChange: e => this.setState({\n        businessAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, this.state.formErrors['business_address']))))), React.createElement(Container, {\n      className: 'product-choose-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.napaNewElectrical,\n      onChange: e => {\n        this.setState({\n          napaNewElectrical: !this.state.napaNewElectrical\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, napaProducts.napaNewElectrical)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.wilson,\n      onChange: e => {\n        this.setState({\n          wilson: !this.state.wilson\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, napaProducts.wilson))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumPlus,\n      onChange: e => {\n        this.setState({\n          premiumPlus: !this.state.premiumPlus\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }, napaProducts.premiumPlus)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumSteering,\n      onChange: e => {\n        this.setState({\n          premiumSteering: !this.state.premiumSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, napaProducts.premiumSteering))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.powerSupport,\n      onChange: e => {\n        this.setState({\n          powerSupport: !this.state.powerSupport\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, napaProducts.powerSupport)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.newSteering,\n      onChange: e => {\n        this.setState({\n          newSteering: !this.state.newSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }, napaProducts.newSteering)))), dataUpdateStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, dataUpdateError))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'play-btn',\n      onClick: () => {\n        this.updateUserData();\n      },\n      theme: 'success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Button, {\n      theme: 'dark',\n      className: 'play-btn',\n      onClick: () => {\n        this.closeUserModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Modal, {\n      open: this.state.showConfirmDeleteModal,\n      toggle: () => {\n        this.setState({\n          showConfirmDeleteModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808\n      },\n      __self: this\n    }, \"Confirm!\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809\n      },\n      __self: this\n    }, \"Do you really want to remove this user data?\", dataDeleteStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, dataDeleteError)), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, React.createElement(Button, {\n      theme: 'danger',\n      onClick: () => {\n        this.deleteUserData(this.state.selectedUserData._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }, \"YES\"), React.createElement(Button, {\n      theme: 'dark',\n      onClick: () => {\n        this.setState({\n          showConfirmDeleteModal: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, \"NO\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    dataListStatus,\n    dataDeleteStatus,\n    userDataList,\n    dataListError,\n    dataDeleteError,\n    dataUpdateStatus,\n    dataUpdateError\n  } = state.user;\n  return {\n    dataListStatus,\n    dataDeleteStatus,\n    userDataList,\n    dataListError,\n    dataDeleteError,\n    dataUpdateStatus,\n    dataUpdateError\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Dashboard/Dashboard.js"],"names":["React","Component","connect","actions","Link","LoadingOverlay","faEdit","faTrash","faChevronRight","FontAwesomeIcon","CSVLink","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","InputGroupAddon","InputGroupText","FormInput","Button","Modal","ModalBody","ModalHeader","ModalFooter","Container","Row","Col","Alert","FormCheckbox","napaProducts","Dashboard","state","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","formErrors","showConfirmDeleteModal","showUserDataModel","selectedUserData","getUsersDataList","dispatch","props","userDataList","then","deleteUserData","userDataId","id","setTimeout","dataDeleteStatus","setState","updateUserData","errors","validateEmail","Object","keys","length","postData","_id","user_type","name","email","products","push","join","dataUpdateStatus","closeUserModal","showEditUserDataModal","data","states","store_number","servicing_dc","store_name","store_address","business_name","business_address","products_buying","split","map","product","formatCsvExport","list","formattedData","key","Created_date","console","log","JSON","stringify","componentWillMount","componentDidMount","userStr","localStorage","getItem","user","parse","history","e","re","test","String","toLowerCase","render","dataListStatus","dataListError","dataDeleteError","dataUpdateError","csvData","headers","label","details","firstName","lastName","job","removeItem","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {faEdit, faTrash, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {CSVLink} from \"react-csv\";\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Button,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    ModalFooter,\n    Container,\n    Row,\n    Col,\n    Alert,\n    FormCheckbox\n} from \"shards-react\";\nimport {napaProducts} from \"../../constants\";\n\nclass Dashboard extends Component {\n    state = {\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null,\n\n        showConfirmDeleteModal: false,\n        showUserDataModel: false,\n\n        selectedUserData: null\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n        const userStr = localStorage.getItem('user_data');\n        if (userStr) {\n            try {\n                const user = JSON.parse(userStr);\n                if (user.id && user.email) {\n                    this.getUsersDataList();\n                } else {\n                    this.props.history.push(\"/admin/login\");\n                }\n            } catch (e) {\n                this.props.history.push(\"/admin/login\");\n            }\n        } else {\n            this.props.history.push(\"/admin/login\");\n        }\n    }\n\n    getUsersDataList = () => {\n        const {dispatch} = this.props;\n        dispatch(actions.userDataList({})).then(() => {\n\n        });\n    }\n\n    deleteUserData = (userDataId) => {\n        const {dispatch} = this.props;\n        dispatch(actions.deleteUserData({\n            id: userDataId\n        })).then(() => {\n            setTimeout(() => {\n                const {dataDeleteStatus} = this.props;\n                if (dataDeleteStatus === 1) {\n                    this.setState({showConfirmDeleteModal: false});\n                }\n            }, 500);\n        });\n    }\n\n    updateUserData = () => {\n\n        const {selectedUserData} = this.state;\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {businessName, businessAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n\n\n        var errors = {};\n\n        if (!fullName) {\n            errors['name'] = \"Full name is required\";\n        }\n        if (!emailAddress) {\n            errors['email'] = \"Email address is required\";\n        } else if (!this.validateEmail(emailAddress)) {\n            errors['email'] = \"Email address is not valid\";\n        }\n\n        if (affiliatedWithNapaStore) {\n            if (!storeNumber) {\n                errors['store_number'] = \"Store number is required\";\n            }\n            if (!servicingDC) {\n                errors['servicing_dc'] = \"Servicing DC is required\";\n            }\n            if (!storeName) {\n                errors['store_name'] = \"Store name is required\";\n            }\n            if (!storeAddress) {\n                errors['store_address'] = \"Store address is required\";\n            }\n        } else if (anInstallerCustomer) {\n            if (!businessName) {\n                errors['business_name'] = \"Business name is required\";\n            }\n            if (!businessAddress) {\n                errors['business_address'] = \"Business address is required\";\n            }\n        } else {\n            errors['user_type'] = \"Select who are you?\";\n        }\n\n\n        if (Object.keys(errors).length == 0) {\n            let postData = {\n                id: selectedUserData._id,\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n                name: fullName,\n                email: emailAddress\n            };\n            if (affiliatedWithNapaStore) {\n                postData['store_number'] = storeNumber;\n                postData['servicing_dc'] = servicingDC;\n                postData['store_name'] = storeName;\n                postData['store_address'] = storeAddress;\n            } else if (anInstallerCustomer) {\n                postData['business_name'] = businessName;\n                postData['business_address'] = businessAddress;\n            }\n\n            let products = [];\n            if (napaNewElectrical) {\n                products.push(napaProducts.napaNewElectrical);\n            }\n            if (wilson) {\n                products.push(napaProducts.wilson);\n            }\n            if (premiumPlus) {\n                products.push(napaProducts.premiumPlus);\n            }\n            if (premiumSteering) {\n                products.push(napaProducts.premiumSteering);\n            }\n            if (powerSupport) {\n                products.push(napaProducts.powerSupport);\n            }\n            if (newSteering) {\n                products.push(napaProducts.newSteering);\n            }\n\n            postData['products_buying'] = products.join(\"|\");\n\n            const {dispatch} = this.props;\n            dispatch(actions.updateUserData(postData)).then(() => {\n                setTimeout(() => {\n                    const {dataUpdateStatus} = this.props;\n                    if (dataUpdateStatus === 1) {\n                        this.closeUserModal();\n                    }\n                }, 500);\n            });\n        } else {\n            this.setState({formErrors: errors});\n        }\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    closeUserModal = () => {\n        this.setState({\n            showUserDataModel: false,\n            selectedUserData: null,\n\n            affiliatedWithNapaStore: false,\n            anInstallerCustomer: false,\n\n            fullName: \"\",\n            emailAddress: \"\",\n\n            storeNumber: \"\",\n            servicingDC: \"\",\n            storeName: \"\",\n            storeAddress: \"\",\n\n            businessName: \"\",\n            businessAddress: \"\",\n\n            napaNewElectrical: false,\n            wilson: false,\n            premiumPlus: false,\n            premiumSteering: false,\n            powerSupport: false,\n            newSteering: false,\n            formErrors: null,\n        });\n    }\n\n\n    showEditUserDataModal = (data) => {\n\n\n        let states = {\n            showUserDataModel: true,\n            selectedUserData: data,\n\n            affiliatedWithNapaStore: (data.user_type == 'affiliated_with_napa_store'),\n            anInstallerCustomer: (data.user_type == 'installer_customer'),\n\n            fullName: data.name,\n            emailAddress: data.email,\n\n            storeNumber: data.store_number,\n            servicingDC: data.servicing_dc,\n            storeName: data.store_name,\n            storeAddress: data.store_address,\n\n            businessName: data.business_name,\n            businessAddress: data.business_address,\n\n            napaNewElectrical: false,\n            wilson: false,\n            premiumPlus: false,\n            premiumSteering: false,\n            powerSupport: false,\n            newSteering: false,\n            formErrors: null,\n        };\n\n        const products = data.products_buying.split(\"|\");\n\n        products.map((product) => {\n            if (product === napaProducts.napaNewElectrical) {\n                states['napaNewElectrical'] = true;\n            }\n            if (product === napaProducts.wilson) {\n                states['wilson'] = true;\n            }\n            if (product === napaProducts.premiumPlus) {\n                states['premiumPlus'] = true;\n            }\n            if (product === napaProducts.premiumSteering) {\n                states['premiumSteering'] = true;\n            }\n            if (product === napaProducts.powerSupport) {\n                states['powerSupport'] = true;\n            }\n            if (product === napaProducts.newSteering) {\n                states['newSteering'] = true;\n            }\n\n        });\n\n        this.setState(states);\n    }\n\n\n    formatCsvExport = (list) => {\n        let formattedData = [\n            [\n                'No.',\n                'User Type',\n                'Full Name',\n                'Email Address',\n                'Product Buying',\n                'Store Number',\n                'Servicing DC',\n                'Store Name',\n                'Store Address',\n                'Business Name',\n                'Business Address',\n                'Date'\n            ]\n        ];\n        if (list) {\n            list.map((data, key) => {\n                formattedData.push([\n                    key + 1,\n                    data.user_type,\n                    data.name,\n                    data.email,\n                    data.products_buying,\n                    data.store_number,\n                    data.servicing_dc,\n                    data.store_name,\n                    data.store_address,\n                    data.business_name,\n                    data.business_address,\n                    data.Created_date\n                ]);\n            });\n        }\n        console.log(JSON.stringify(formattedData));\n        return formattedData;\n    }\n\n    render() {\n        const {dataListStatus, userDataList, dataListError, dataDeleteStatus, dataDeleteError} = this.props;\n        const {dataUpdateStatus, dataUpdateError} = this.props;\n        let csvData = this.formatCsvExport(userDataList);\n\n        const headers = [\n            { label: 'First Name', key: 'details.firstName' },\n            { label: 'Last Name', key: 'details.lastName' },\n            { label: 'Job', key: 'job' },\n        ];\n\n        const data = [\n            { details: { firstName: 'Ahmed', lastName: 'Tomi' }, job: 'manager'},\n            { details: { firstName: 'John', lastName: 'Jones' }, job: 'developer'},\n        ];\n\n        return (\n            <LoadingOverlay\n                active={dataListStatus === -1 || dataDeleteStatus === -1 || dataUpdateStatus === -1}\n                spinner\n                text='Connecting...'\n            >\n                <div className=\"dashboard-page-container\">\n                    <Navbar className={'navbar-view'} type=\"dark\">\n                        <NavbarBrand href=\"#\">NAPA Panel</NavbarBrand>\n\n                        <Nav navbar className=\"ml-auto\">\n                            <NavItem>\n                                <NavLink active href=\"#\" onClick={() => {\n                                    localStorage.removeItem('user_data');\n                                    this.props.history.push(\"/admin/login\");\n                                }}>\n                                    Logout\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar>\n\n                    {\n                        (userDataList && userDataList.length > 0) && (\n                            <CSVLink\n                                data={csvData}\n                                asyncOnClick={true}\n                                target=\"_blank\"\n                                filename={'napa_user_list.csv'}\n                            >\n                                <Button squared theme=\"secondary\" className={\"export-btn\"}>\n                                    Export\n                                </Button>\n                            </CSVLink>\n                        )\n                    }\n                    <CSVLink data={data} headers={headers}>\n                        Download me\n                    </CSVLink>\n\n                    <table className={\"table-view\"}>\n                        <tr>\n                            <th>No.</th>\n                            <th>User Type</th>\n                            <th>Full Name</th>\n                            <th>Email</th>\n                            <th>Products Buying</th>\n                            <th>Options</th>\n                        </tr>\n                        <tbody>\n                        {\n                            userDataList && userDataList.map((data, key) => {\n                                return (\n                                    <tr>\n                                        <td>{key + 1}</td>\n                                        <td>{data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'}</td>\n                                        <td>{data.name}</td>\n                                        <td>{data.email}</td>\n                                        <td>{data.products_buying}</td>\n                                        <td className={'options'}>\n                                            <Button className={'option-btn'} onClick={() => {\n                                                this.showEditUserDataModal(data);\n                                            }}><FontAwesomeIcon icon={faEdit}/></Button>\n                                            <Button className={'option-btn delete'} onClick={() => {\n                                                this.setState({\n                                                    showConfirmDeleteModal: true,\n                                                    selectedUserData: data,\n                                                });\n                                            }}><FontAwesomeIcon\n                                                icon={faTrash}/></Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <Modal centered={true} className={'userdata-edit-modal'} open={this.state.showUserDataModel}\n                       toggle={() => {\n                           this.setState({showUserDataModel: !this.state.showUserDataModel});\n                       }}>\n                    <ModalHeader>Edit User Data</ModalHeader>\n                    <ModalBody>\n                        <div className={'form-container'}>\n                            <Container className={'option-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            ARE YOU?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.affiliatedWithNapaStore}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: true,\n                                                    anInstallerCustomer: false\n                                                });\n                                            }}\n                                        >affiliated with a NAPA store</FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.anInstallerCustomer}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: false,\n                                                    anInstallerCustomer: true\n                                                });\n                                            }}\n                                        >\n                                            an installer customer\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n                            </Container>\n\n                            <Container className={'input-form'}>\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Full Name</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.fullName}\n                                            onChange={(e) => this.setState({fullName: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['name']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['name']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Email address</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            type={\"email\"}\n                                            value={this.state.emailAddress}\n                                            onChange={(e) => this.setState({emailAddress: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['email']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['email']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.affiliatedWithNapaStore && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store number</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeNumber}\n                                                        onChange={(e) => this.setState({storeNumber: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_number']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_number']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Servicing DC</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.servicingDC}\n                                                        onChange={(e) => this.setState({servicingDC: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['servicing_dc']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeName}\n                                                        onChange={(e) => this.setState({storeName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store address</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeAddress}\n                                                        onChange={(e) => this.setState({storeAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.anInstallerCustomer && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessName}\n                                                        onChange={(e) => this.setState({businessName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Address</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessAddress}\n                                                        onChange={(e) => this.setState({businessAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                            </Container>\n\n\n                            <Container className={'product-choose-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.napaNewElectrical}\n                                            onChange={e => {\n                                                this.setState({napaNewElectrical: !this.state.napaNewElectrical});\n                                            }}\n                                        >\n                                            {napaProducts.napaNewElectrical}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.wilson}\n                                            onChange={e => {\n                                                this.setState({wilson: !this.state.wilson});\n                                            }}\n                                        >\n                                            {napaProducts.wilson}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumPlus}\n                                            onChange={e => {\n                                                this.setState({premiumPlus: !this.state.premiumPlus});\n                                            }}\n                                        >\n                                            {napaProducts.premiumPlus}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumSteering}\n                                            onChange={e => {\n                                                this.setState({premiumSteering: !this.state.premiumSteering});\n                                            }}\n                                        >\n                                            {napaProducts.premiumSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.powerSupport}\n                                            onChange={e => {\n                                                this.setState({powerSupport: !this.state.powerSupport});\n                                            }}\n                                        >\n                                            {napaProducts.powerSupport}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.newSteering}\n                                            onChange={e => {\n                                                this.setState({newSteering: !this.state.newSteering});\n                                            }}\n                                        >\n                                            {napaProducts.newSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                            </Container>\n\n                            {\n                                dataUpdateStatus == 0 && (\n                                    <Alert theme=\"danger\">{dataUpdateError}</Alert>\n                                )\n                            }\n\n                        </div>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button className={'play-btn'} onClick={() => {\n                            this.updateUserData();\n                        }} theme={'success'}>Save</Button>\n                        <Button theme={'dark'} className={'play-btn'} onClick={() => {\n                            this.closeUserModal();\n                        }}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n\n                <Modal open={this.state.showConfirmDeleteModal} toggle={() => {\n                    this.setState({showConfirmDeleteModal: false})\n                }}>\n                    <ModalHeader>Confirm!</ModalHeader>\n                    <ModalBody>\n                        Do you really want to remove this user data?\n                        {\n                            dataDeleteStatus == 0 && (\n                                <Alert theme=\"danger\">{dataDeleteError}</Alert>\n                            )\n                        }\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button theme={'danger'} onClick={() => {\n                            this.deleteUserData(this.state.selectedUserData._id);\n                        }}>YES</Button>\n                        <Button theme={'dark'} onClick={() => {\n                            this.setState({showConfirmDeleteModal: false});\n                        }}>NO</Button>\n                    </ModalFooter>\n                </Modal>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataListStatus, dataDeleteStatus, userDataList, dataListError, dataDeleteError, dataUpdateStatus, dataUpdateError} = state.user;\n    return {\n        dataListStatus,\n        dataDeleteStatus,\n        userDataList,\n        dataListError,\n        dataDeleteError,\n        dataUpdateStatus,\n        dataUpdateError\n    };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}