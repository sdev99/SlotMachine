{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport { apiUrl, napaProducts } from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { FormCheckbox, FormInput, Container, Row, Col, Button, Alert, CardBody } from \"shards-react\";\nimport $ from \"jquery\";\nimport LoadingOverlay from \"react-loading-overlay\";\nconst SLOTS_PER_REEL = 12; // radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\n\nlet REEL_RADIUS = 500;\n\nclass Spin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      fullName: \"\",\n      emailAddress: \"\",\n      storeNumber: \"\",\n      servicingDC: \"\",\n      storeName: \"\",\n      storeAddress: \"\",\n      businessName: \"\",\n      businessAddress: \"\",\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      formErrors: null,\n      isShowForm: true,\n      showVideo: false,\n      disableSpin: false,\n      screenType: 'spin',\n      items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n    this.setScreenOrientation = () => {\n      if (window.matchMedia(\"(orientation: portrait)\").matches) {\n        console.log('orientation: portrait');\n\n        if (window.innerWidth <= 319) {\n          REEL_RADIUS = 105;\n        } else if (window.innerWidth >= 320 && window.innerWidth <= 400) {\n          REEL_RADIUS = 120;\n        } else if (window.innerWidth >= 401 && window.innerWidth <= 767) {\n          REEL_RADIUS = 150;\n        } else if (window.innerWidth >= 768 && window.innerWidth <= 1024) {\n          REEL_RADIUS = 300;\n        } else if (window.innerWidth >= 1025) {\n          REEL_RADIUS = 800;\n        }\n      }\n\n      if (window.matchMedia(\"(orientation: landscape)\").matches) {\n        console.log('orientation: landscape');\n\n        if (window.innerHeight <= 319) {\n          REEL_RADIUS = 105;\n        } else if (window.innerHeight >= 320 && window.innerHeight <= 400) {\n          REEL_RADIUS = 120;\n        } else if (window.innerHeight >= 401 && window.innerHeight <= 767) {\n          REEL_RADIUS = 300;\n        } else if (window.innerHeight >= 768 && window.innerHeight <= 1024) {\n          REEL_RADIUS = 300;\n        } else if (window.innerHeight >= 1025) {\n          REEL_RADIUS = 800;\n        }\n      }\n    };\n\n    this.setUpSlots = () => {\n      this.createSlots($('#ring1'));\n      this.createSlots($('#ring2'));\n      this.createSlots($('#ring3'));\n    };\n\n    this.createSlots = ring => {\n      var slotAngle = 360 / SLOTS_PER_REEL;\n      var seed = this.getSeed();\n      seed = 2;\n\n      for (var i = 0; i < SLOTS_PER_REEL; i++) {\n        var slot = document.createElement('div');\n        slot.className = 'slot'; // compute and assign the transform for this slot\n\n        var transform = 'rotateX(' + slotAngle * i + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n        slot.style.transform = transform; // setup the number to show inside the slots\n        // the position is randomized to\n        // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n\n        var content = $(slot).append('<img src=\"./images/' + this.state.items[(seed + i) % 5] + '\" class=\"spin-item\"/>'); // add the poster to the row\n\n        ring.append(slot);\n      }\n    };\n\n    this.getSeed = () => {\n      // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n      return Math.floor(Math.random() * SLOTS_PER_REEL);\n    };\n\n    this.spin = () => {\n      this.setState({\n        disableSpin: true\n      });\n      var timer = 2;\n      var maxTimerDelay = 0; //var txt = 'seeds: ';\n\n      for (var i = 1; i < 4; i++) {\n        var oldSeed = -1;\n        /*\n        checking that the old seed from the previous iteration is not the same as the current iteration;\n        if this happens then the reel will not spin at all\n        */\n\n        var oldClass = $('#ring' + i).attr('class');\n\n        if (oldClass.length > 4) {\n          oldSeed = parseInt(oldClass.slice(10));\n          console.log(oldSeed);\n        }\n\n        var seed = this.getSeed();\n\n        while (oldSeed == seed) {\n          seed = this.getSeed();\n        }\n\n        var delay = timer + i * 0.5;\n        $('#ring' + i).css('animation', 'back-spin 1s, spin-' + seed + ' ' + delay + 's').attr('class', 'ring spin-' + seed);\n        console.log(\"delay\" + delay);\n\n        if (maxTimerDelay < delay) {\n          maxTimerDelay = delay;\n        }\n      }\n\n      setTimeout(() => {\n        if (this.state.screenType == 'spinagain') {\n          this.setState({\n            disableSpin: false,\n            showVideo: true,\n            screenType: 'spinagainlast'\n          });\n          setTimeout(() => {\n            document.getElementById('trainingvideoview').play();\n          }, 300);\n        } else if (this.state.screenType == 'spinagainlast') {\n          this.setState({\n            disableSpin: true,\n            screenType: 'finalscreen'\n          }); // setTimeout(() => {\n          //     this.setState({disableSpin:false, isShowForm: true, screenType: 'spin'}, () => {\n          //         this.setUpSlots();\n          //     });\n          // }, 5 * 1000);\n        } else {\n          this.setState({\n            disableSpin: false,\n            screenType: 'spinagain'\n          });\n        }\n      }, maxTimerDelay * 1000);\n    };\n\n    this.submitUserData = () => {\n      const {\n        affiliatedWithNapaStore,\n        anInstallerCustomer,\n        fullName,\n        emailAddress\n      } = this.state;\n      const {\n        storeNumber,\n        servicingDC,\n        storeName,\n        storeAddress\n      } = this.state;\n      const {\n        businessName,\n        businessAddress\n      } = this.state;\n      const {\n        napaNewElectrical,\n        wilson,\n        premiumPlus,\n        premiumSteering,\n        powerSupport,\n        newSteering\n      } = this.state;\n      var errors = {};\n\n      if (!fullName) {\n        errors['name'] = \"Full name is required\";\n      }\n\n      if (!emailAddress) {\n        errors['email'] = \"Email address is required\";\n      } else if (!this.validateEmail(emailAddress)) {\n        errors['email'] = \"Email address is not valid\";\n      }\n\n      if (affiliatedWithNapaStore) {\n        if (!storeNumber) {\n          errors['store_number'] = \"Store number is required\";\n        }\n\n        if (!servicingDC) {\n          errors['servicing_dc'] = \"Servicing DC is required\";\n        }\n\n        if (!storeName) {\n          errors['store_name'] = \"Store name is required\";\n        }\n\n        if (!storeAddress) {\n          errors['store_address'] = \"Store address is required\";\n        }\n      } else if (anInstallerCustomer) {\n        if (!businessName) {\n          errors['business_name'] = \"Business name is required\";\n        }\n\n        if (!businessAddress) {\n          errors['business_address'] = \"Business address is required\";\n        }\n      } else {\n        errors['user_type'] = \"Select who are you?\";\n      }\n\n      if (Object.keys(errors).length == 0) {\n        let postData = {\n          user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n          name: fullName,\n          email: emailAddress\n        };\n\n        if (affiliatedWithNapaStore) {\n          postData['store_number'] = storeNumber;\n          postData['servicing_dc'] = servicingDC;\n          postData['store_name'] = storeName;\n          postData['store_address'] = storeAddress;\n        } else if (anInstallerCustomer) {\n          postData['business_name'] = businessName;\n          postData['business_address'] = businessAddress;\n        }\n\n        let products = [];\n\n        if (napaNewElectrical) {\n          products.push(napaProducts.napaNewElectrical);\n        }\n\n        if (wilson) {\n          products.push(napaProducts.wilson);\n        }\n\n        if (premiumPlus) {\n          products.push(napaProducts.premiumPlus);\n        }\n\n        if (premiumSteering) {\n          products.push(napaProducts.premiumSteering);\n        }\n\n        if (powerSupport) {\n          products.push(napaProducts.powerSupport);\n        }\n\n        if (newSteering) {\n          products.push(napaProducts.newSteering);\n        }\n\n        postData['products_buying'] = products.join(\"|\");\n        const {\n          dispatch\n        } = this.props;\n        dispatch(actions.submitUserData(postData)).then(() => {\n          setTimeout(() => {\n            const {\n              dataAddingStatus\n            } = this.props;\n\n            if (dataAddingStatus === 1) {\n              this.setState({\n                isShowForm: false,\n                screenType: 'spin',\n                affiliatedWithNapaStore: false,\n                anInstallerCustomer: false,\n                fullName: \"\",\n                emailAddress: \"\",\n                storeNumber: \"\",\n                servicingDC: \"\",\n                storeName: \"\",\n                storeAddress: \"\",\n                businessName: \"\",\n                businessAddress: \"\",\n                napaNewElectrical: false,\n                wilson: false,\n                premiumPlus: false,\n                premiumSteering: false,\n                powerSupport: false,\n                newSteering: false,\n                formErrors: null\n              });\n            }\n          }, 500);\n        });\n      } else {\n        this.setState({\n          formErrors: errors\n        });\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {}\n\n  componentWillMount() {\n    window.addEventListener('orientationchange', this.setScreenOrientation);\n    this.setScreenOrientation();\n  }\n\n  componentDidMount() {}\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  render() {\n    const {\n      dataAddingStatus,\n      dataAddingError\n    } = this.props;\n    return React.createElement(LoadingOverlay, {\n      active: dataAddingStatus == -1,\n      spinner: true,\n      text: \"Connecting....\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spin-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'slot-machine-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onLoad: () => {\n        this.setState({\n          isImageLoad: true\n        }, () => {\n          this.setUpSlots();\n        });\n      },\n      className: 'spin-bg-image',\n      style: {\n        opacity: this.state.screenType == 'spin' ? 1 : 0\n      },\n      src: 'images/spinbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinagainbackground.png',\n      style: {\n        opacity: this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/finalscreen.png',\n      style: {\n        opacity: this.state.screenType == 'finalscreen' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), this.state.screenType == 'finalscreen' && React.createElement(Button, {\n      className: 'start-over-btn',\n      pill: true,\n      onClick: () => {\n        this.setState({\n          disableSpin: false,\n          isShowForm: true,\n          screenType: 'spin'\n        }, () => {\n          this.setUpSlots();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Start Over\"), this.state.isImageLoad && (this.state.screenType === 'spinagain' || this.state.screenType === 'spinagainlast' || this.state.screenType === 'spin') && React.createElement(\"div\", {\n      id: \"rotate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ring1\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring2\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring3\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    })), !this.state.disableSpin && React.createElement(\"div\", {\n      className: 'spin-btn',\n      onClick: this.spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })), this.state.showVideo && React.createElement(\"div\", {\n      className: 'video-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      controls: false,\n      className: 'video-view',\n      autoPlay: true,\n      id: 'trainingvideoview',\n      onEnded: () => {\n        this.setState({\n          showVideo: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"videos/sample.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }))), this.state.isShowForm && React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: 'heading-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"PRE-QUALIFY FOR THE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"BIG RACE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: 'heading3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"To begin, please answer a few simple questions:\")))), React.createElement(Container, {\n      className: 'option-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"ARE YOU?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.affiliatedWithNapaStore,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: true,\n          anInstallerCustomer: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"affiliated with a NAPA store\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.anInstallerCustomer,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: false,\n          anInstallerCustomer: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"an installer customer\"))), this.state.formErrors && this.state.formErrors['user_type'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, this.state.formErrors['user_type'])))), React.createElement(Container, {\n      className: 'input-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \"Full Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.fullName,\n      onChange: e => this.setState({\n        fullName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, this.state.formErrors['name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, \"Email address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      type: \"email\",\n      value: this.state.emailAddress,\n      onChange: e => this.setState({\n        emailAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['email'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, this.state.formErrors['email']))), this.state.affiliatedWithNapaStore && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \"Store number\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeNumber,\n      onChange: e => this.setState({\n        storeNumber: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_number'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, this.state.formErrors['store_number']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"Servicing DC\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.servicingDC,\n      onChange: e => this.setState({\n        servicingDC: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['servicing_dc'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, this.state.formErrors['servicing_dc']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"Store Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeName,\n      onChange: e => this.setState({\n        storeName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, this.state.formErrors['store_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"Store address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.storeAddress,\n      onChange: e => this.setState({\n        storeAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['store_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, this.state.formErrors['store_address'])))), this.state.anInstallerCustomer && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"Business Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessName,\n      onChange: e => this.setState({\n        businessName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_name'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661\n      },\n      __self: this\n    }, this.state.formErrors['business_name']))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, \"Business Address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      value: this.state.businessAddress,\n      onChange: e => this.setState({\n        businessAddress: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }))), this.state.formErrors && this.state.formErrors['business_address'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, this.state.formErrors['business_address']))))), React.createElement(Container, {\n      className: 'product-choose-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, \"WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.napaNewElectrical,\n      onChange: e => {\n        this.setState({\n          napaNewElectrical: !this.state.napaNewElectrical\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }, napaProducts.napaNewElectrical)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.wilson,\n      onChange: e => {\n        this.setState({\n          wilson: !this.state.wilson\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, napaProducts.wilson))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumPlus,\n      onChange: e => {\n        this.setState({\n          premiumPlus: !this.state.premiumPlus\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }, napaProducts.premiumPlus)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumSteering,\n      onChange: e => {\n        this.setState({\n          premiumSteering: !this.state.premiumSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, napaProducts.premiumSteering))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.powerSupport,\n      onChange: e => {\n        this.setState({\n          powerSupport: !this.state.powerSupport\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758\n      },\n      __self: this\n    }, napaProducts.powerSupport)), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.newSteering,\n      onChange: e => {\n        this.setState({\n          newSteering: !this.state.newSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }, napaProducts.newSteering)))), dataAddingStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }, dataAddingError), React.createElement(Container, {\n      className: 'btn-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'play-btn',\n      pill: true,\n      onClick: () => {\n        this.submitUserData();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }, \"Let's Play! >>\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    dataAddingStatus,\n    error\n  } = state.user;\n  return {\n    dataAddingStatus,\n    dataAddingError: error\n  };\n};\n\nexport default connect(mapStateToProps)(Spin);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js"],"names":["React","Component","connect","actions","BackgroundImage","apiUrl","napaProducts","axios","FormCheckbox","FormInput","Container","Row","Col","Button","Alert","CardBody","$","LoadingOverlay","SLOTS_PER_REEL","REEL_RADIUS","Spin","constructor","props","state","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","formErrors","isShowForm","showVideo","disableSpin","screenType","items","setScreenOrientation","window","matchMedia","matches","console","log","innerWidth","innerHeight","setUpSlots","createSlots","ring","slotAngle","seed","getSeed","i","slot","document","createElement","className","transform","style","content","append","Math","floor","random","spin","setState","timer","maxTimerDelay","oldSeed","oldClass","attr","length","parseInt","slice","delay","css","setTimeout","getElementById","play","submitUserData","errors","validateEmail","Object","keys","postData","user_type","name","email","products","push","join","dispatch","then","dataAddingStatus","componentWillReceiveProps","nextProps","nextContext","componentWillMount","addEventListener","componentDidMount","re","test","String","toLowerCase","render","dataAddingError","isImageLoad","opacity","e","target","value","mapStateToProps","error","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl, napaProducts} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button,\n    Alert, CardBody\n} from \"shards-react\";\nimport $ from \"jquery\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nconst SLOTS_PER_REEL = 12;\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\nlet REEL_RADIUS = 500;\n\nclass Spin extends Component {\n    state = {\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null,\n\n        isShowForm: true,\n\n        showVideo: false,\n        disableSpin: false,\n        screenType: 'spin',\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png'],\n    };\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n        window.addEventListener('orientationchange', this.setScreenOrientation);\n        this.setScreenOrientation();\n    }\n\n    setScreenOrientation = () => {\n        if (window.matchMedia(\"(orientation: portrait)\").matches) {\n            console.log('orientation: portrait');\n            if (window.innerWidth <= 319) {\n                REEL_RADIUS = 105;\n            } else if (window.innerWidth >= 320 && window.innerWidth <= 400) {\n                REEL_RADIUS = 120;\n            } else if (window.innerWidth >= 401 && window.innerWidth <= 767) {\n                REEL_RADIUS = 150;\n            } else if (window.innerWidth >= 768 && window.innerWidth <= 1024) {\n                REEL_RADIUS = 300;\n            } else if (window.innerWidth >= 1025) {\n                REEL_RADIUS = 800;\n            }\n        }\n\n        if (window.matchMedia(\"(orientation: landscape)\").matches) {\n            console.log('orientation: landscape');\n            if (window.innerHeight <= 319) {\n                REEL_RADIUS = 105;\n            } else if (window.innerHeight >= 320 && window.innerHeight <= 400) {\n                REEL_RADIUS = 120;\n            } else if (window.innerHeight >= 401 && window.innerHeight <= 767) {\n                REEL_RADIUS = 300;\n            } else if (window.innerHeight >= 768 && window.innerHeight <= 1024) {\n                REEL_RADIUS = 300;\n            } else if (window.innerHeight >= 1025) {\n                REEL_RADIUS = 800;\n            }\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    setUpSlots = () => {\n        this.createSlots($('#ring1'));\n        this.createSlots($('#ring2'));\n        this.createSlots($('#ring3'));\n    }\n\n\n    createSlots = (ring) => {\n\n        var slotAngle = 360 / SLOTS_PER_REEL;\n\n        var seed = this.getSeed();\n        seed = 2;\n\n        for (var i = 0; i < SLOTS_PER_REEL; i++) {\n            var slot = document.createElement('div');\n\n            slot.className = 'slot';\n\n            // compute and assign the transform for this slot\n            var transform = 'rotateX(' + (slotAngle * i) + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n\n            slot.style.transform = transform;\n\n            // setup the number to show inside the slots\n            // the position is randomized to\n\n            // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n            var content = $(slot).append('<img src=\"./images/' + this.state.items[((seed + i) % 5)] + '\" class=\"spin-item\"/>');\n\n            // add the poster to the row\n            ring.append(slot);\n        }\n    }\n\n    getSeed = () => {\n        // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n        return Math.floor(Math.random() * (SLOTS_PER_REEL));\n    }\n\n    spin = () => {\n        this.setState({disableSpin: true});\n        var timer = 2;\n        var maxTimerDelay = 0;\n        //var txt = 'seeds: ';\n        for (var i = 1; i < 4; i++) {\n            var oldSeed = -1;\n            /*\n            checking that the old seed from the previous iteration is not the same as the current iteration;\n            if this happens then the reel will not spin at all\n            */\n            var oldClass = $('#ring' + i).attr('class');\n            if (oldClass.length > 4) {\n                oldSeed = parseInt(oldClass.slice(10));\n                console.log(oldSeed);\n            }\n            var seed = this.getSeed();\n            while (oldSeed == seed) {\n                seed = this.getSeed();\n            }\n\n            var delay = timer + i * 0.5;\n            $('#ring' + i)\n                .css('animation', 'back-spin 1s, spin-' + seed + ' ' + (delay) + 's')\n                .attr('class', 'ring spin-' + seed);\n            console.log(\"delay\" + delay);\n            if (maxTimerDelay < delay) {\n                maxTimerDelay = delay;\n            }\n        }\n        setTimeout(() => {\n\n            if (this.state.screenType == 'spinagain') {\n                this.setState({disableSpin: false, showVideo: true, screenType: 'spinagainlast'});\n                setTimeout(() => {\n                    document.getElementById('trainingvideoview').play();\n                }, 300);\n            } else if (this.state.screenType == 'spinagainlast') {\n                this.setState({disableSpin: true, screenType: 'finalscreen'});\n                // setTimeout(() => {\n                //     this.setState({disableSpin:false, isShowForm: true, screenType: 'spin'}, () => {\n                //         this.setUpSlots();\n                //     });\n                // }, 5 * 1000);\n            } else {\n                this.setState({disableSpin: false, screenType: 'spinagain'});\n            }\n\n        }, maxTimerDelay * 1000);\n\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    submitUserData = () => {\n\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {businessName, businessAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n\n\n        var errors = {};\n\n        if (!fullName) {\n            errors['name'] = \"Full name is required\";\n        }\n        if (!emailAddress) {\n            errors['email'] = \"Email address is required\";\n        } else if (!this.validateEmail(emailAddress)) {\n            errors['email'] = \"Email address is not valid\";\n        }\n\n        if (affiliatedWithNapaStore) {\n            if (!storeNumber) {\n                errors['store_number'] = \"Store number is required\";\n            }\n            if (!servicingDC) {\n                errors['servicing_dc'] = \"Servicing DC is required\";\n            }\n            if (!storeName) {\n                errors['store_name'] = \"Store name is required\";\n            }\n            if (!storeAddress) {\n                errors['store_address'] = \"Store address is required\";\n            }\n        } else if (anInstallerCustomer) {\n            if (!businessName) {\n                errors['business_name'] = \"Business name is required\";\n            }\n            if (!businessAddress) {\n                errors['business_address'] = \"Business address is required\";\n            }\n        } else {\n            errors['user_type'] = \"Select who are you?\";\n        }\n\n\n        if (Object.keys(errors).length == 0) {\n            let postData = {\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n                name: fullName,\n                email: emailAddress\n            };\n            if (affiliatedWithNapaStore) {\n                postData['store_number'] = storeNumber;\n                postData['servicing_dc'] = servicingDC;\n                postData['store_name'] = storeName;\n                postData['store_address'] = storeAddress;\n            } else if (anInstallerCustomer) {\n                postData['business_name'] = businessName;\n                postData['business_address'] = businessAddress;\n            }\n\n            let products = [];\n            if (napaNewElectrical) {\n                products.push(napaProducts.napaNewElectrical);\n            }\n            if (wilson) {\n                products.push(napaProducts.wilson);\n            }\n            if (premiumPlus) {\n                products.push(napaProducts.premiumPlus);\n            }\n            if (premiumSteering) {\n                products.push(napaProducts.premiumSteering);\n            }\n            if (powerSupport) {\n                products.push(napaProducts.powerSupport);\n            }\n            if (newSteering) {\n                products.push(napaProducts.newSteering);\n            }\n\n            postData['products_buying'] = products.join(\"|\");\n\n            const {dispatch} = this.props;\n            dispatch(actions.submitUserData(postData)).then(() => {\n                setTimeout(() => {\n                    const {dataAddingStatus} = this.props;\n                    if (dataAddingStatus === 1) {\n                        this.setState({\n                            isShowForm: false,\n                            screenType: 'spin',\n\n                            affiliatedWithNapaStore: false,\n                            anInstallerCustomer: false,\n\n                            fullName: \"\",\n                            emailAddress: \"\",\n\n                            storeNumber: \"\",\n                            servicingDC: \"\",\n                            storeName: \"\",\n                            storeAddress: \"\",\n\n                            businessName: \"\",\n                            businessAddress: \"\",\n\n                            napaNewElectrical: false,\n                            wilson: false,\n                            premiumPlus: false,\n                            premiumSteering: false,\n                            powerSupport: false,\n                            newSteering: false,\n                            formErrors: null,\n                        });\n                    }\n                }, 500);\n            });\n        } else {\n            this.setState({formErrors: errors});\n        }\n    }\n\n    render() {\n        const {dataAddingStatus, dataAddingError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={dataAddingStatus == -1}\n                spinner\n                text='Connecting....'\n            >\n                <div className=\"spin-page-container\">\n                    <div className={'slot-machine-container'}>\n\n                        <img\n                            onLoad={() => {\n                                this.setState({isImageLoad: true}, () => {\n                                    this.setUpSlots();\n                                });\n                            }}\n                            className={'spin-bg-image'}\n                            style={{opacity: (this.state.screenType == 'spin') ? 1 : 0}}\n                            src={'images/spinbackground.png'}/>\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/spinagainbackground.png'}\n                            style={{opacity: (this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast') ? 1 : 0}}\n                        />\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/finalscreen.png'}\n                            style={{opacity: (this.state.screenType == 'finalscreen') ? 1 : 0}}\n                        />\n\n                        {\n                            (this.state.screenType == 'finalscreen') && (\n                                <Button className={'start-over-btn'} pill onClick={() => {\n                                    this.setState({disableSpin: false, isShowForm: true, screenType: 'spin'}, () => {\n                                        this.setUpSlots();\n                                    });\n                                }}>Start Over</Button>\n                            )\n                        }\n\n\n                        {\n                            (this.state.isImageLoad && (this.state.screenType === 'spinagain' || this.state.screenType === 'spinagainlast' || this.state.screenType === 'spin')) && (\n                                <div id=\"rotate\">\n                                    <div id=\"ring1\" className=\"ring\"></div>\n                                    <div id=\"ring2\" className=\"ring\"></div>\n                                    <div id=\"ring3\" className=\"ring\"></div>\n                                </div>\n                            )\n                        }\n\n\n                        {\n                            !this.state.disableSpin && (\n                                <div className={'spin-btn'} onClick={this.spin}></div>\n                            )\n                        }\n\n                    </div>\n\n                    {\n                        this.state.showVideo && (\n                            <div className={'video-container'}>\n                                <video controls={false} className={'video-view'} autoPlay id={'trainingvideoview'}\n                                       onEnded={() => {\n                                           this.setState({showVideo: false});\n                                       }}>\n                                    <source src=\"videos/sample.mp4\" type=\"video/mp4\"/>\n                                </video>\n                            </div>\n                        )\n                    }\n\n\n                    {\n                        this.state.isShowForm && (\n                            <div className=\"container\">\n                                <div className={'form-container'}>\n                                    <Container className={'heading-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading1'}>PRE-QUALIFY FOR THE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading2'}>BIG RACE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <h4 className={'heading3'}>\n                                                    To begin, please answer a few simple questions:\n                                                </h4>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n                                    <Container className={'option-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    ARE YOU?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.affiliatedWithNapaStore}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: true,\n                                                            anInstallerCustomer: false\n                                                        });\n                                                    }}\n                                                >affiliated with a NAPA store</FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.anInstallerCustomer}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: false,\n                                                            anInstallerCustomer: true\n                                                        });\n                                                    }}\n                                                >\n                                                    an installer customer\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['user_type']) && (\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['user_type']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                    </Container>\n\n\n                                    <Container className={'input-form'}>\n                                        <Row>\n                                            <Col sm={12} md={4}>\n                                                <span className={'input-label'}>Full Name</span>\n                                            </Col>\n                                            <Col sm={12} md={8}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    value={this.state.fullName}\n                                                    onChange={(e) => this.setState({fullName: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['name']) && (\n                                                <Row>\n                                                    <Col sm={12} md={4}></Col>\n                                                    <Col sm={12} md={8}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['name']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                        <Row>\n                                            <Col sm={12} md={4}>\n                                                <span className={'input-label'}>Email address</span>\n                                            </Col>\n                                            <Col sm={12} md={8}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    type={\"email\"}\n                                                    value={this.state.emailAddress}\n                                                    onChange={(e) => this.setState({emailAddress: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['email']) && (\n                                                <Row>\n                                                    <Col sm={12} md={4}></Col>\n                                                    <Col sm={12} md={8}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['email']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                        {\n                                            this.state.affiliatedWithNapaStore && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store number</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeNumber}\n                                                                onChange={(e) => this.setState({storeNumber: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_number']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_number']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Servicing DC</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.servicingDC}\n                                                                onChange={(e) => this.setState({servicingDC: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['servicing_dc']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeName}\n                                                                onChange={(e) => this.setState({storeName: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_name']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_name']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store address</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeAddress}\n                                                                onChange={(e) => this.setState({storeAddress: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_address']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_address']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                        {\n                                            this.state.anInstallerCustomer && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Business Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.businessName}\n                                                                onChange={(e) => this.setState({businessName: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['business_name']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['business_name']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Business Address</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.businessAddress}\n                                                                onChange={(e) => this.setState({businessAddress: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['business_address']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={4}></Col>\n                                                                <Col sm={12} md={8}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['business_address']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                    </Container>\n\n\n                                    <Container className={'product-choose-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.napaNewElectrical}\n                                                    onChange={e => {\n                                                        this.setState({napaNewElectrical: !this.state.napaNewElectrical});\n                                                    }}\n                                                >\n                                                    {napaProducts.napaNewElectrical}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.wilson}\n                                                    onChange={e => {\n                                                        this.setState({wilson: !this.state.wilson});\n                                                    }}\n                                                >\n                                                    {napaProducts.wilson}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumPlus}\n                                                    onChange={e => {\n                                                        this.setState({premiumPlus: !this.state.premiumPlus});\n                                                    }}\n                                                >\n                                                    {napaProducts.premiumPlus}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumSteering}\n                                                    onChange={e => {\n                                                        this.setState({premiumSteering: !this.state.premiumSteering});\n                                                    }}\n                                                >\n                                                    {napaProducts.premiumSteering}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.powerSupport}\n                                                    onChange={e => {\n                                                        this.setState({powerSupport: !this.state.powerSupport});\n                                                    }}\n                                                >\n                                                    {napaProducts.powerSupport}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.newSteering}\n                                                    onChange={e => {\n                                                        this.setState({newSteering: !this.state.newSteering});\n                                                    }}\n                                                >\n                                                    {napaProducts.newSteering}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n\n                                    {\n                                        dataAddingStatus == 0 && (\n                                            <Alert theme=\"danger\">{dataAddingError}</Alert>\n                                        )\n                                    }\n\n                                    <Container className={'btn-view'}>\n                                        <Row>\n                                            <Col>\n                                                <Button className={'play-btn'} pill onClick={() => {\n                                                    this.submitUserData();\n                                                }}>Let's Play! >></Button>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n\n                </div>\n            </LoadingOverlay>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataAddingStatus, error} = state.user;\n    return {\n        dataAddingStatus,\n        dataAddingError: error\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n"]},"metadata":{},"sourceType":"module"}