{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport { apiUrl } from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { FormCheckbox, FormInput, Container, Row, Col, Button } from \"shards-react\";\nimport $ from \"jquery\";\nconst SLOTS_PER_REEL = 12; // radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\n\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      fullName: \"\",\n      emailAddress: \"\",\n      storeNumber: \"\",\n      servicingDC: \"\",\n      storeName: \"\",\n      storeAddress: \"\",\n      businessName: \"\",\n      businessAddress: \"\",\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      isShowForm: true,\n      showVideo: false,\n      disableSpin: false,\n      screenType: 'spin',\n      items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n    this.setUpSlots = () => {\n      this.createSlots($('#ring1'));\n      this.createSlots($('#ring2'));\n      this.createSlots($('#ring3'));\n    };\n\n    this.createSlots = ring => {\n      var slotAngle = 360 / SLOTS_PER_REEL;\n      var seed = this.getSeed();\n      seed = 2;\n\n      for (var i = 0; i < SLOTS_PER_REEL; i++) {\n        var slot = document.createElement('div');\n        slot.className = 'slot'; // compute and assign the transform for this slot\n\n        var transform = 'rotateX(' + slotAngle * i + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n        slot.style.transform = transform; // setup the number to show inside the slots\n        // the position is randomized to\n        // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n\n        var content = $(slot).append('<img src=\"./images/' + this.state.items[(seed + i) % 5] + '\" class=\"spin-item\"/>'); // add the poster to the row\n\n        ring.append(slot);\n      }\n    };\n\n    this.getSeed = () => {\n      // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n      return Math.floor(Math.random() * SLOTS_PER_REEL);\n    };\n\n    this.spin = () => {\n      this.setState({\n        disableSpin: true\n      });\n      var timer = 2;\n      var maxTimerDelay = 0; //var txt = 'seeds: ';\n\n      for (var i = 1; i < 4; i++) {\n        var oldSeed = -1;\n        /*\n        checking that the old seed from the previous iteration is not the same as the current iteration;\n        if this happens then the reel will not spin at all\n        */\n\n        var oldClass = $('#ring' + i).attr('class');\n\n        if (oldClass.length > 4) {\n          oldSeed = parseInt(oldClass.slice(10));\n          console.log(oldSeed);\n        }\n\n        var seed = this.getSeed();\n\n        while (oldSeed == seed) {\n          seed = this.getSeed();\n        }\n\n        var delay = timer + i * 0.5;\n        $('#ring' + i).css('animation', 'back-spin 1s, spin-' + seed + ' ' + delay + 's').attr('class', 'ring spin-' + seed);\n        console.log(\"delay\" + delay);\n\n        if (maxTimerDelay < delay) {\n          maxTimerDelay = delay;\n        }\n      }\n\n      setTimeout(() => {\n        if (this.state.screenType == 'spinagain') {\n          this.setState({\n            disableSpin: false,\n            showVideo: true,\n            screenType: 'spinagainlast'\n          });\n          setTimeout(() => {\n            document.getElementById('trainingvideoview').play();\n          }, 300);\n        } else if (this.state.screenType == 'spinagainlast') {\n          this.setState({\n            disableSpin: false,\n            screenType: 'finalscreen'\n          });\n          setTimeout(() => {\n            this.setState({\n              isShowForm: true,\n              screenType: 'spin'\n            });\n          }, 5 * 1000);\n        } else {\n          this.setState({\n            disableSpin: false,\n            screenType: 'spinagain'\n          });\n        }\n      }, maxTimerDelay * 1000);\n    };\n\n    this.submitUserData = () => {\n      const {\n        affiliatedWithNapaStore,\n        anInstallerCustomer,\n        fullName,\n        emailAddress\n      } = this.state;\n      const {\n        storeNumber,\n        servicingDC,\n        storeName,\n        storeAddress\n      } = this.state;\n      const {\n        napaNewElectrical,\n        wilson,\n        premiumPlus,\n        premiumSteering,\n        powerSupport,\n        newSteering\n      } = this.state;\n      const {\n        businessName,\n        businessAddress\n      } = this.state;\n      let postData = {\n        user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n        name: fullName\n      };\n\n      if (affiliatedWithNapaStore) {}\n\n      this.setState({\n        isShowForm: false,\n        screenType: 'spin'\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {}\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"spin-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'slot-machine-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onLoad: () => {\n        this.setState({\n          isImageLoad: true\n        }, () => {\n          this.setUpSlots();\n        });\n      },\n      className: 'spin-bg-image',\n      style: {\n        opacity: this.state.screenType == 'spin' ? 1 : 0\n      },\n      src: 'images/spinbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinagainbackground.png',\n      style: {\n        opacity: this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/finalscreen.png',\n      style: {\n        opacity: this.state.screenType == 'finalscreen' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), this.state.isImageLoad && React.createElement(\"div\", {\n      id: \"rotate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ring1\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring2\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring3\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), !this.state.disableSpin && React.createElement(\"div\", {\n      className: 'spin-btn',\n      onClick: this.spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), this.state.showVideo && React.createElement(\"div\", {\n      className: 'video-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: 'video-view',\n      autoPlay: true,\n      id: 'trainingvideoview',\n      onEnded: () => {\n        this.setState({\n          showVideo: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"videos/sample.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))), this.state.isShowForm && React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: 'heading-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"PRE-QUALIFY FOR THE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"BIG RACE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: 'heading3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"To begin, please answer a few simple questions:\")))), React.createElement(Container, {\n      className: 'option-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"ARE YOU?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.affiliatedWithNapaStore,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: true,\n          anInstallerCustomer: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"affiliated with a NAPA store\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.anInstallerCustomer,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: false,\n          anInstallerCustomer: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"an installer customer\")))), React.createElement(Container, {\n      className: 'input-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Full Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Email address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      type: \"email\",\n      valid: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }))), this.state.affiliatedWithNapaStore && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Store number\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Servicing DC\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Store Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Store address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })))), this.state.anInstallerCustomer && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Business Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Business Address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      className: 'product-choose-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.napaNewElectrical,\n      onChange: e => {\n        this.setState({\n          napaNewElectrical: !this.state.napaNewElectrical\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"NAPA NEW Electrical\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.wilson,\n      onChange: e => {\n        this.setState({\n          wilson: !this.state.wilson\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Wilson\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumPlus,\n      onChange: e => {\n        this.setState({\n          premiumPlus: !this.state.premiumPlus\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"NAPA Power Premium Plus\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumSteering,\n      onChange: e => {\n        this.setState({\n          premiumSteering: !this.state.premiumSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Premium NAPA Steering\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.powerSupport,\n      onChange: e => {\n        this.setState({\n          powerSupport: !this.state.powerSupport\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"NAPA Power Sport\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.newSteering,\n      onChange: e => {\n        this.setState({\n          newSteering: !this.state.newSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \"NAPA NEW Steering\")))), React.createElement(Container, {\n      className: 'btn-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'play-btn',\n      pill: true,\n      onClick: () => {\n        this.submitUserData();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Let's Play! >>\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user\n  } = state.user;\n  return {\n    user\n  };\n};\n\nexport default connect(mapStateToProps)(Spin);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js"],"names":["React","Component","connect","actions","BackgroundImage","apiUrl","axios","FormCheckbox","FormInput","Container","Row","Col","Button","$","SLOTS_PER_REEL","REEL_RADIUS","Spin","constructor","props","state","loading","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","isShowForm","showVideo","disableSpin","screenType","items","setUpSlots","createSlots","ring","slotAngle","seed","getSeed","i","slot","document","createElement","className","transform","style","content","append","Math","floor","random","spin","setState","timer","maxTimerDelay","oldSeed","oldClass","attr","length","parseInt","slice","console","log","delay","css","setTimeout","getElementById","play","submitUserData","postData","user_type","name","componentWillReceiveProps","nextProps","nextContext","componentWillMount","componentDidMount","render","isImageLoad","opacity","e","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button\n} from \"shards-react\";\nimport $ from \"jquery\";\n\nconst SLOTS_PER_REEL = 12;\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n    state = {\n        loading: false,\n\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n\n        isShowForm: true,\n\n        showVideo: false,\n        disableSpin: false,\n        screenType: 'spin',\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    setUpSlots = () => {\n        this.createSlots($('#ring1'));\n        this.createSlots($('#ring2'));\n        this.createSlots($('#ring3'));\n    }\n\n\n    createSlots = (ring) => {\n\n        var slotAngle = 360 / SLOTS_PER_REEL;\n\n        var seed = this.getSeed();\n        seed = 2;\n\n        for (var i = 0; i < SLOTS_PER_REEL; i++) {\n            var slot = document.createElement('div');\n\n            slot.className = 'slot';\n\n            // compute and assign the transform for this slot\n            var transform = 'rotateX(' + (slotAngle * i) + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n\n            slot.style.transform = transform;\n\n            // setup the number to show inside the slots\n            // the position is randomized to\n\n            // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n            var content = $(slot).append('<img src=\"./images/' + this.state.items[((seed + i) % 5)] + '\" class=\"spin-item\"/>');\n\n            // add the poster to the row\n            ring.append(slot);\n        }\n    }\n\n    getSeed = () => {\n        // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n        return Math.floor(Math.random() * (SLOTS_PER_REEL));\n    }\n\n    spin = () => {\n        this.setState({disableSpin: true});\n        var timer = 2;\n        var maxTimerDelay = 0;\n        //var txt = 'seeds: ';\n        for (var i = 1; i < 4; i++) {\n            var oldSeed = -1;\n            /*\n            checking that the old seed from the previous iteration is not the same as the current iteration;\n            if this happens then the reel will not spin at all\n            */\n            var oldClass = $('#ring' + i).attr('class');\n            if (oldClass.length > 4) {\n                oldSeed = parseInt(oldClass.slice(10));\n                console.log(oldSeed);\n            }\n            var seed = this.getSeed();\n            while (oldSeed == seed) {\n                seed = this.getSeed();\n            }\n\n            var delay = timer + i * 0.5;\n            $('#ring' + i)\n                .css('animation', 'back-spin 1s, spin-' + seed + ' ' + (delay) + 's')\n                .attr('class', 'ring spin-' + seed);\n            console.log(\"delay\" + delay);\n            if (maxTimerDelay < delay) {\n                maxTimerDelay = delay;\n            }\n        }\n        setTimeout(() => {\n\n            if (this.state.screenType == 'spinagain') {\n                this.setState({disableSpin: false, showVideo: true, screenType: 'spinagainlast'});\n                setTimeout(() => {\n                    document.getElementById('trainingvideoview').play();\n                }, 300);\n            } else if (this.state.screenType == 'spinagainlast') {\n                this.setState({disableSpin: false, screenType: 'finalscreen'});\n                setTimeout(() => {\n                    this.setState({isShowForm: true, screenType: 'spin'});\n                }, 5 * 1000);\n            } else {\n                this.setState({disableSpin: false, screenType: 'spinagain'});\n            }\n\n        }, maxTimerDelay * 1000);\n\n    }\n\n\n    submitUserData = () => {\n\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n        const {businessName, businessAddress} = this.state;\n\n        let postData = {\n            user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n            name: fullName\n        };\n        if(affiliatedWithNapaStore) {\n            \n        }\n\n        this.setState({isShowForm: false, screenType: 'spin'});\n    }\n\n    render() {\n\n        return (\n            <div className=\"spin-page-container\">\n                <div className={'slot-machine-container'}>\n\n                    <img\n                        onLoad={() => {\n                            this.setState({isImageLoad: true}, () => {\n                                this.setUpSlots();\n                            });\n                        }}\n                        className={'spin-bg-image'}\n                        style={{opacity: (this.state.screenType == 'spin') ? 1 : 0}}\n                        src={'images/spinbackground.png'}/>\n\n                    <img\n                        className={'spin-bg-image'}\n                        src={'images/spinagainbackground.png'}\n                        style={{opacity: (this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast') ? 1 : 0}}\n                    />\n\n                    <img\n                        className={'spin-bg-image'}\n                        src={'images/finalscreen.png'}\n                        style={{opacity: (this.state.screenType == 'finalscreen') ? 1 : 0}}\n                    />\n\n\n                    {\n                        this.state.isImageLoad && (\n                            <div id=\"rotate\">\n                                <div id=\"ring1\" className=\"ring\"></div>\n                                <div id=\"ring2\" className=\"ring\"></div>\n                                <div id=\"ring3\" className=\"ring\"></div>\n                            </div>\n                        )\n                    }\n\n\n                    {\n                        !this.state.disableSpin && (\n                            <div className={'spin-btn'} onClick={this.spin}></div>\n                        )\n                    }\n\n                </div>\n\n                {\n                    this.state.showVideo && (\n                        <div className={'video-container'}>\n                            <video className={'video-view'} autoPlay id={'trainingvideoview'} onEnded={() => {\n                                this.setState({showVideo: false});\n                            }}>\n                                <source src=\"videos/sample.mp4\" type=\"video/mp4\"/>\n                            </video>\n                        </div>\n                    )\n                }\n\n\n                {\n                    this.state.isShowForm && (\n                        <div className=\"container\">\n                            <div className={'form-container'}>\n                                <Container className={'heading-form'}>\n                                    <Row>\n                                        <Col>\n                                            <div className={'heading1'}>PRE-QUALIFY FOR THE</div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <div className={'heading2'}>BIG RACE</div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h4 className={'heading3'}>\n                                                To begin, please answer a few simple questions:\n                                            </h4>\n                                        </Col>\n                                    </Row>\n\n                                </Container>\n                                <Container className={'option-form'}>\n                                    <Row>\n                                        <Col>\n                                            <div className={'heading4'}>\n                                                ARE YOU?\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.affiliatedWithNapaStore}\n                                                onChange={e => {\n                                                    this.setState({\n                                                        affiliatedWithNapaStore: true,\n                                                        anInstallerCustomer: false\n                                                    });\n                                                }}\n                                            >affiliated with a NAPA store</FormCheckbox>\n                                        </Col>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.anInstallerCustomer}\n                                                onChange={e => {\n                                                    this.setState({\n                                                        affiliatedWithNapaStore: false,\n                                                        anInstallerCustomer: true\n                                                    });\n                                                }}\n                                            >\n                                                an installer customer\n                                            </FormCheckbox>\n                                        </Col>\n                                    </Row>\n                                </Container>\n\n                                <Container className={'input-form'}>\n                                    <Row>\n                                        <Col sm={12} md={4}>\n                                            <span className={'input-label'}>Full Name</span>\n                                        </Col>\n                                        <Col sm={12} md={8}>\n                                            <FormInput className=\"input-field\"/>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col sm={12} md={4}>\n                                            <span className={'input-label'}>Email address</span>\n                                        </Col>\n                                        <Col sm={12} md={8}>\n                                            <FormInput className=\"input-field\" type={\"email\"} valid={false}/>\n                                        </Col>\n                                    </Row>\n\n                                    {\n                                        this.state.affiliatedWithNapaStore && (\n                                            <React.Fragment>\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Store number</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Servicing DC</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Store Name</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Store address</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n                                            </React.Fragment>\n                                        )\n                                    }\n\n\n                                    {\n                                        this.state.anInstallerCustomer && (\n                                            <React.Fragment>\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Business Name</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n\n                                                <Row>\n                                                    <Col sm={12} md={4}>\n                                                        <span className={'input-label'}>Business Address</span>\n                                                    </Col>\n                                                    <Col sm={12} md={8}>\n                                                        <FormInput className=\"input-field\"/>\n                                                    </Col>\n                                                </Row>\n                                            </React.Fragment>\n                                        )\n                                    }\n\n\n                                </Container>\n\n\n                                <Container className={'product-choose-form'}>\n                                    <Row>\n                                        <Col>\n                                            <div className={'heading4'}>\n                                                WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.napaNewElectrical}\n                                                onChange={e => {\n                                                    this.setState({napaNewElectrical: !this.state.napaNewElectrical});\n                                                }}\n                                            >\n                                                NAPA NEW Electrical\n                                            </FormCheckbox>\n                                        </Col>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.wilson}\n                                                onChange={e => {\n                                                    this.setState({wilson: !this.state.wilson});\n                                                }}\n                                            >\n                                                Wilson\n                                            </FormCheckbox>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.premiumPlus}\n                                                onChange={e => {\n                                                    this.setState({premiumPlus: !this.state.premiumPlus});\n                                                }}\n                                            >\n                                                NAPA Power Premium Plus\n                                            </FormCheckbox>\n                                        </Col>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.premiumSteering}\n                                                onChange={e => {\n                                                    this.setState({premiumSteering: !this.state.premiumSteering});\n                                                }}\n                                            >\n                                                Premium NAPA Steering\n                                            </FormCheckbox>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.powerSupport}\n                                                onChange={e => {\n                                                    this.setState({powerSupport: !this.state.powerSupport});\n                                                }}\n                                            >\n                                                NAPA Power Sport\n                                            </FormCheckbox>\n                                        </Col>\n                                        <Col sm={12} md={6}>\n                                            <FormCheckbox\n                                                checked={this.state.newSteering}\n                                                onChange={e => {\n                                                    this.setState({newSteering: !this.state.newSteering});\n                                                }}\n                                            >\n                                                NAPA NEW Steering\n                                            </FormCheckbox>\n                                        </Col>\n                                    </Row>\n\n                                </Container>\n\n                                <Container className={'btn-view'}>\n                                    <Row>\n                                        <Col>\n                                            <Button className={'play-btn'} pill onClick={() => {\n                                                this.submitUserData();\n                                            }}>Let's Play! >></Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n\n                            </div>\n                        </div>\n                    )\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    const {user} = state.user;\n    return {\n        user\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n"]},"metadata":{},"sourceType":"module"}