{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport { apiUrl } from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport { FormCheckbox, FormInput, Container, Row, Col, Button, Alert, CardBody } from \"shards-react\";\nimport $ from \"jquery\";\nimport LoadingOverlay from \"react-loading-overlay\";\nconst SLOTS_PER_REEL = 12; // radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\n\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      submitted: false,\n      affiliatedWithNapaStore: false,\n      anInstallerCustomer: false,\n      fullName: \"\",\n      emailAddress: \"\",\n      storeNumber: \"\",\n      servicingDC: \"\",\n      storeName: \"\",\n      storeAddress: \"\",\n      businessName: \"\",\n      businessAddress: \"\",\n      napaNewElectrical: false,\n      wilson: false,\n      premiumPlus: false,\n      premiumSteering: false,\n      powerSupport: false,\n      newSteering: false,\n      isShowForm: true,\n      formErrors: null,\n      showVideo: false,\n      disableSpin: false,\n      screenType: 'spin',\n      items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n    this.setUpSlots = () => {\n      this.createSlots($('#ring1'));\n      this.createSlots($('#ring2'));\n      this.createSlots($('#ring3'));\n    };\n\n    this.createSlots = ring => {\n      var slotAngle = 360 / SLOTS_PER_REEL;\n      var seed = this.getSeed();\n      seed = 2;\n\n      for (var i = 0; i < SLOTS_PER_REEL; i++) {\n        var slot = document.createElement('div');\n        slot.className = 'slot'; // compute and assign the transform for this slot\n\n        var transform = 'rotateX(' + slotAngle * i + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n        slot.style.transform = transform; // setup the number to show inside the slots\n        // the position is randomized to\n        // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n\n        var content = $(slot).append('<img src=\"./images/' + this.state.items[(seed + i) % 5] + '\" class=\"spin-item\"/>'); // add the poster to the row\n\n        ring.append(slot);\n      }\n    };\n\n    this.getSeed = () => {\n      // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n      return Math.floor(Math.random() * SLOTS_PER_REEL);\n    };\n\n    this.spin = () => {\n      this.setState({\n        disableSpin: true\n      });\n      var timer = 2;\n      var maxTimerDelay = 0; //var txt = 'seeds: ';\n\n      for (var i = 1; i < 4; i++) {\n        var oldSeed = -1;\n        /*\n        checking that the old seed from the previous iteration is not the same as the current iteration;\n        if this happens then the reel will not spin at all\n        */\n\n        var oldClass = $('#ring' + i).attr('class');\n\n        if (oldClass.length > 4) {\n          oldSeed = parseInt(oldClass.slice(10));\n          console.log(oldSeed);\n        }\n\n        var seed = this.getSeed();\n\n        while (oldSeed == seed) {\n          seed = this.getSeed();\n        }\n\n        var delay = timer + i * 0.5;\n        $('#ring' + i).css('animation', 'back-spin 1s, spin-' + seed + ' ' + delay + 's').attr('class', 'ring spin-' + seed);\n        console.log(\"delay\" + delay);\n\n        if (maxTimerDelay < delay) {\n          maxTimerDelay = delay;\n        }\n      }\n\n      setTimeout(() => {\n        if (this.state.screenType == 'spinagain') {\n          this.setState({\n            disableSpin: false,\n            showVideo: true,\n            screenType: 'spinagainlast'\n          });\n          setTimeout(() => {\n            document.getElementById('trainingvideoview').play();\n          }, 300);\n        } else if (this.state.screenType == 'spinagainlast') {\n          this.setState({\n            disableSpin: false,\n            screenType: 'finalscreen'\n          });\n          setTimeout(() => {\n            this.setState({\n              isShowForm: true,\n              screenType: 'spin'\n            });\n          }, 5 * 1000);\n        } else {\n          this.setState({\n            disableSpin: false,\n            screenType: 'spinagain'\n          });\n        }\n      }, maxTimerDelay * 1000);\n    };\n\n    this.submitUserData = () => {\n      const {\n        affiliatedWithNapaStore,\n        anInstallerCustomer,\n        fullName,\n        emailAddress\n      } = this.state;\n      const {\n        storeNumber,\n        servicingDC,\n        storeName,\n        storeAddress\n      } = this.state;\n      const {\n        businessName,\n        businessAddress\n      } = this.state;\n      const {\n        napaNewElectrical,\n        wilson,\n        premiumPlus,\n        premiumSteering,\n        powerSupport,\n        newSteering\n      } = this.state;\n      var errors = {};\n\n      if (!fullName) {\n        errors['name'] = \"Full name is required\";\n      }\n\n      if (!emailAddress) {\n        errors['email'] = \"Email address is required\";\n      } else if (!this.validateEmail(emailAddress)) {\n        errors['email'] = \"Email address is not valid\";\n      }\n\n      if (affiliatedWithNapaStore) {\n        if (!storeNumber) {\n          errors['store_number'] = \"Store number is required\";\n        }\n\n        if (!servicingDC) {\n          errors['servicing_dc'] = \"Servicing DC is required\";\n        }\n\n        if (!storeName) {\n          errors['store_name'] = \"Store name is required\";\n        }\n\n        if (!storeAddress) {\n          errors['store_address'] = \"Store address is required\";\n        }\n      } else if (anInstallerCustomer) {\n        if (!businessName) {\n          errors['business_name'] = \"Business name is required\";\n        }\n\n        if (!businessAddress) {\n          errors['business_address'] = \"Business address is required\";\n        }\n      } else {\n        errors['user_type'] = \"Select who are you?\";\n      }\n\n      if (Object.keys(errors) > 0) {\n        let postData = {\n          user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n          name: fullName,\n          email: emailAddress\n        };\n\n        if (affiliatedWithNapaStore) {\n          postData['store_number'] = storeNumber;\n          postData['servicing_dc'] = servicingDC;\n          postData['store_name'] = storeName;\n          postData['store_address'] = storeAddress;\n        } else if (anInstallerCustomer) {\n          postData['business_name'] = businessName;\n          postData['business_address'] = businessAddress;\n        }\n\n        let products = [];\n\n        if (napaNewElectrical) {\n          products.push('NAPA NEW Electrical');\n        }\n\n        if (wilson) {\n          products.push('Wilson');\n        }\n\n        if (premiumPlus) {\n          products.push('NAPA Power Premium Plus');\n        }\n\n        if (premiumSteering) {\n          products.push('Premium NAPA Steering');\n        }\n\n        if (powerSupport) {\n          products.push('NAPA Power Sport');\n        }\n\n        if (newSteering) {\n          products.push('NAPA NEW Steering');\n        }\n\n        postData['products_buying'] = products.join(\"|\");\n        const {\n          dispatch\n        } = this.props;\n        dispatch(actions.submitClientData(postData)).then(() => {\n          setTimeout(() => {\n            const {\n              dataAddingStatus,\n              dataAddingError\n            } = this.props;\n\n            if (dataAddingStatus === 1) {\n              this.setState({\n                submitted: true,\n                isShowForm: false,\n                screenType: 'spin'\n              });\n            }\n          }, 500);\n        });\n      } else {\n        this.setState({\n          submitted: true,\n          formErrors: errors\n        });\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {}\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  render() {\n    const {\n      dataAddingStatus,\n      dataAddingError\n    } = this.props;\n    return React.createElement(LoadingOverlay, {\n      active: dataAddingStatus == -1,\n      spinner: true,\n      text: \"Connecting....\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spin-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'slot-machine-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onLoad: () => {\n        this.setState({\n          isImageLoad: true\n        }, () => {\n          this.setUpSlots();\n        });\n      },\n      className: 'spin-bg-image',\n      style: {\n        opacity: this.state.screenType == 'spin' ? 1 : 0\n      },\n      src: 'images/spinbackground.png',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/spinagainbackground.png',\n      style: {\n        opacity: this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: 'spin-bg-image',\n      src: 'images/finalscreen.png',\n      style: {\n        opacity: this.state.screenType == 'finalscreen' ? 1 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), this.state.isImageLoad && React.createElement(\"div\", {\n      id: \"rotate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ring1\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring2\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"ring3\",\n      className: \"ring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), !this.state.disableSpin && React.createElement(\"div\", {\n      className: 'spin-btn',\n      onClick: this.spin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })), this.state.showVideo && React.createElement(\"div\", {\n      className: 'video-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: 'video-view',\n      autoPlay: true,\n      id: 'trainingvideoview',\n      onEnded: () => {\n        this.setState({\n          showVideo: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"videos/sample.mp4\",\n      type: \"video/mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }))), this.state.isShowForm && React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-container',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: 'heading-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading1',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"PRE-QUALIFY FOR THE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"BIG RACE\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: 'heading3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"To begin, please answer a few simple questions:\")))), React.createElement(Container, {\n      className: 'option-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"ARE YOU?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.affiliatedWithNapaStore,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: true,\n          anInstallerCustomer: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"affiliated with a NAPA store\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.anInstallerCustomer,\n      onChange: e => {\n        this.setState({\n          affiliatedWithNapaStore: false,\n          anInstallerCustomer: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"an installer customer\"))), this.state.formErrors && this.state.formErrors['user_type'] && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, this.state.formErrors['user_type'])))), React.createElement(Container, {\n      className: 'input-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Full Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Email address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      type: \"email\",\n      valid: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }))), this.state.affiliatedWithNapaStore && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Store number\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"Servicing DC\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"Store Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Store address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    })))), this.state.anInstallerCustomer && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"Business Name\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: 'input-label',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"Business Address\")), React.createElement(Col, {\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }))))), React.createElement(Container, {\n      className: 'product-choose-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'heading4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.napaNewElectrical,\n      onChange: e => {\n        this.setState({\n          napaNewElectrical: !this.state.napaNewElectrical\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"NAPA NEW Electrical\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.wilson,\n      onChange: e => {\n        this.setState({\n          wilson: !this.state.wilson\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, \"Wilson\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumPlus,\n      onChange: e => {\n        this.setState({\n          premiumPlus: !this.state.premiumPlus\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"NAPA Power Premium Plus\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.premiumSteering,\n      onChange: e => {\n        this.setState({\n          premiumSteering: !this.state.premiumSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, \"Premium NAPA Steering\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.powerSupport,\n      onChange: e => {\n        this.setState({\n          powerSupport: !this.state.powerSupport\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, \"NAPA Power Sport\")), React.createElement(Col, {\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(FormCheckbox, {\n      checked: this.state.newSteering,\n      onChange: e => {\n        this.setState({\n          newSteering: !this.state.newSteering\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"NAPA NEW Steering\")))), dataAddingStatus == 0 && React.createElement(Alert, {\n      theme: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, dataAddingError), React.createElement(Container, {\n      className: 'btn-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'play-btn',\n      pill: true,\n      onClick: () => {\n        this.submitUserData();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, \"Let's Play! >>\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    dataAddingStatus,\n    error\n  } = state.client;\n  return {\n    dataAddingStatus,\n    dataAddingError: error\n  };\n};\n\nexport default connect(mapStateToProps)(Spin);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages/Spin/Spin.js"],"names":["React","Component","connect","actions","BackgroundImage","apiUrl","axios","FormCheckbox","FormInput","Container","Row","Col","Button","Alert","CardBody","$","LoadingOverlay","SLOTS_PER_REEL","REEL_RADIUS","Spin","constructor","props","state","loading","submitted","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","isShowForm","formErrors","showVideo","disableSpin","screenType","items","setUpSlots","createSlots","ring","slotAngle","seed","getSeed","i","slot","document","createElement","className","transform","style","content","append","Math","floor","random","spin","setState","timer","maxTimerDelay","oldSeed","oldClass","attr","length","parseInt","slice","console","log","delay","css","setTimeout","getElementById","play","submitUserData","errors","validateEmail","Object","keys","postData","user_type","name","email","products","push","join","dispatch","submitClientData","then","dataAddingStatus","dataAddingError","componentWillReceiveProps","nextProps","nextContext","componentWillMount","componentDidMount","re","test","String","toLowerCase","render","isImageLoad","opacity","e","mapStateToProps","error","client"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button,\n    Alert, CardBody\n} from \"shards-react\";\nimport $ from \"jquery\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nconst SLOTS_PER_REEL = 12;\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\nconst REEL_RADIUS = 500;\n\nclass Spin extends Component {\n    state = {\n        loading: false,\n        submitted: false,\n\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n\n        isShowForm: true,\n        formErrors: null,\n\n        showVideo: false,\n        disableSpin: false,\n        screenType: 'spin',\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    setUpSlots = () => {\n        this.createSlots($('#ring1'));\n        this.createSlots($('#ring2'));\n        this.createSlots($('#ring3'));\n    }\n\n\n    createSlots = (ring) => {\n\n        var slotAngle = 360 / SLOTS_PER_REEL;\n\n        var seed = this.getSeed();\n        seed = 2;\n\n        for (var i = 0; i < SLOTS_PER_REEL; i++) {\n            var slot = document.createElement('div');\n\n            slot.className = 'slot';\n\n            // compute and assign the transform for this slot\n            var transform = 'rotateX(' + (slotAngle * i) + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n\n            slot.style.transform = transform;\n\n            // setup the number to show inside the slots\n            // the position is randomized to\n\n            // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n            var content = $(slot).append('<img src=\"./images/' + this.state.items[((seed + i) % 5)] + '\" class=\"spin-item\"/>');\n\n            // add the poster to the row\n            ring.append(slot);\n        }\n    }\n\n    getSeed = () => {\n        // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n        return Math.floor(Math.random() * (SLOTS_PER_REEL));\n    }\n\n    spin = () => {\n        this.setState({disableSpin: true});\n        var timer = 2;\n        var maxTimerDelay = 0;\n        //var txt = 'seeds: ';\n        for (var i = 1; i < 4; i++) {\n            var oldSeed = -1;\n            /*\n            checking that the old seed from the previous iteration is not the same as the current iteration;\n            if this happens then the reel will not spin at all\n            */\n            var oldClass = $('#ring' + i).attr('class');\n            if (oldClass.length > 4) {\n                oldSeed = parseInt(oldClass.slice(10));\n                console.log(oldSeed);\n            }\n            var seed = this.getSeed();\n            while (oldSeed == seed) {\n                seed = this.getSeed();\n            }\n\n            var delay = timer + i * 0.5;\n            $('#ring' + i)\n                .css('animation', 'back-spin 1s, spin-' + seed + ' ' + (delay) + 's')\n                .attr('class', 'ring spin-' + seed);\n            console.log(\"delay\" + delay);\n            if (maxTimerDelay < delay) {\n                maxTimerDelay = delay;\n            }\n        }\n        setTimeout(() => {\n\n            if (this.state.screenType == 'spinagain') {\n                this.setState({disableSpin: false, showVideo: true, screenType: 'spinagainlast'});\n                setTimeout(() => {\n                    document.getElementById('trainingvideoview').play();\n                }, 300);\n            } else if (this.state.screenType == 'spinagainlast') {\n                this.setState({disableSpin: false, screenType: 'finalscreen'});\n                setTimeout(() => {\n                    this.setState({isShowForm: true, screenType: 'spin'});\n                }, 5 * 1000);\n            } else {\n                this.setState({disableSpin: false, screenType: 'spinagain'});\n            }\n\n        }, maxTimerDelay * 1000);\n\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    submitUserData = () => {\n\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {businessName, businessAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n\n\n        var errors = {};\n\n        if (!fullName) {\n            errors['name'] = \"Full name is required\";\n        }\n        if (!emailAddress) {\n            errors['email'] = \"Email address is required\";\n        } else if (!this.validateEmail(emailAddress)) {\n            errors['email'] = \"Email address is not valid\";\n        }\n\n        if (affiliatedWithNapaStore) {\n            if (!storeNumber) {\n                errors['store_number'] = \"Store number is required\";\n            }\n            if (!servicingDC) {\n                errors['servicing_dc'] = \"Servicing DC is required\";\n            }\n            if (!storeName) {\n                errors['store_name'] = \"Store name is required\";\n            }\n            if (!storeAddress) {\n                errors['store_address'] = \"Store address is required\";\n            }\n        } else if (anInstallerCustomer) {\n            if (!businessName) {\n                errors['business_name'] = \"Business name is required\";\n            }\n            if (!businessAddress) {\n                errors['business_address'] = \"Business address is required\";\n            }\n        } else {\n            errors['user_type'] = \"Select who are you?\";\n        }\n\n        if (Object.keys(errors) > 0) {\n            let postData = {\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n                name: fullName,\n                email: emailAddress\n            };\n            if (affiliatedWithNapaStore) {\n                postData['store_number'] = storeNumber;\n                postData['servicing_dc'] = servicingDC;\n                postData['store_name'] = storeName;\n                postData['store_address'] = storeAddress;\n            } else if (anInstallerCustomer) {\n                postData['business_name'] = businessName;\n                postData['business_address'] = businessAddress;\n            }\n\n            let products = [];\n            if (napaNewElectrical) {\n                products.push('NAPA NEW Electrical');\n            }\n            if (wilson) {\n                products.push('Wilson');\n            }\n            if (premiumPlus) {\n                products.push('NAPA Power Premium Plus');\n            }\n            if (premiumSteering) {\n                products.push('Premium NAPA Steering');\n            }\n            if (powerSupport) {\n                products.push('NAPA Power Sport');\n            }\n            if (newSteering) {\n                products.push('NAPA NEW Steering');\n            }\n\n            postData['products_buying'] = products.join(\"|\");\n\n            const {dispatch} = this.props;\n            dispatch(actions.submitClientData(postData)).then(() => {\n                setTimeout(() => {\n                    const {dataAddingStatus, dataAddingError} = this.props;\n                    if (dataAddingStatus === 1) {\n                        this.setState({submitted: true, isShowForm: false, screenType: 'spin'});\n                    }\n                }, 500);\n            });\n        } else {\n            this.setState({submitted: true, formErrors: errors});\n        }\n    }\n\n    render() {\n        const {dataAddingStatus, dataAddingError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={dataAddingStatus == -1}\n                spinner\n                text='Connecting....'\n            >\n                <div className=\"spin-page-container\">\n                    <div className={'slot-machine-container'}>\n\n                        <img\n                            onLoad={() => {\n                                this.setState({isImageLoad: true}, () => {\n                                    this.setUpSlots();\n                                });\n                            }}\n                            className={'spin-bg-image'}\n                            style={{opacity: (this.state.screenType == 'spin') ? 1 : 0}}\n                            src={'images/spinbackground.png'}/>\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/spinagainbackground.png'}\n                            style={{opacity: (this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast') ? 1 : 0}}\n                        />\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/finalscreen.png'}\n                            style={{opacity: (this.state.screenType == 'finalscreen') ? 1 : 0}}\n                        />\n\n\n                        {\n                            this.state.isImageLoad && (\n                                <div id=\"rotate\">\n                                    <div id=\"ring1\" className=\"ring\"></div>\n                                    <div id=\"ring2\" className=\"ring\"></div>\n                                    <div id=\"ring3\" className=\"ring\"></div>\n                                </div>\n                            )\n                        }\n\n\n                        {\n                            !this.state.disableSpin && (\n                                <div className={'spin-btn'} onClick={this.spin}></div>\n                            )\n                        }\n\n                    </div>\n\n                    {\n                        this.state.showVideo && (\n                            <div className={'video-container'}>\n                                <video className={'video-view'} autoPlay id={'trainingvideoview'} onEnded={() => {\n                                    this.setState({showVideo: false});\n                                }}>\n                                    <source src=\"videos/sample.mp4\" type=\"video/mp4\"/>\n                                </video>\n                            </div>\n                        )\n                    }\n\n\n                    {\n                        this.state.isShowForm && (\n                            <div className=\"container\">\n                                <div className={'form-container'}>\n                                    <Container className={'heading-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading1'}>PRE-QUALIFY FOR THE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading2'}>BIG RACE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <h4 className={'heading3'}>\n                                                    To begin, please answer a few simple questions:\n                                                </h4>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n                                    <Container className={'option-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    ARE YOU?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.affiliatedWithNapaStore}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: true,\n                                                            anInstallerCustomer: false\n                                                        });\n                                                    }}\n                                                >affiliated with a NAPA store</FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.anInstallerCustomer}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: false,\n                                                            anInstallerCustomer: true\n                                                        });\n                                                    }}\n                                                >\n                                                    an installer customer\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['user_type']) && (\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['user_type']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                    </Container>\n\n\n                                    <Container className={'input-form'}>\n                                        <Row>\n                                            <Col sm={12} md={4}>\n                                                <span className={'input-label'}>Full Name</span>\n                                            </Col>\n                                            <Col sm={12} md={8}>\n                                                <FormInput className=\"input-field\"/>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={4}>\n                                                <span className={'input-label'}>Email address</span>\n                                            </Col>\n                                            <Col sm={12} md={8}>\n                                                <FormInput className=\"input-field\" type={\"email\"} valid={false}/>\n                                            </Col>\n                                        </Row>\n\n                                        {\n                                            this.state.affiliatedWithNapaStore && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store number</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Servicing DC</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Store address</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                        {\n                                            this.state.anInstallerCustomer && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Business Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col sm={12} md={4}>\n                                                            <span className={'input-label'}>Business Address</span>\n                                                        </Col>\n                                                        <Col sm={12} md={8}>\n                                                            <FormInput className=\"input-field\"/>\n                                                        </Col>\n                                                    </Row>\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                    </Container>\n\n\n                                    <Container className={'product-choose-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.napaNewElectrical}\n                                                    onChange={e => {\n                                                        this.setState({napaNewElectrical: !this.state.napaNewElectrical});\n                                                    }}\n                                                >\n                                                    NAPA NEW Electrical\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.wilson}\n                                                    onChange={e => {\n                                                        this.setState({wilson: !this.state.wilson});\n                                                    }}\n                                                >\n                                                    Wilson\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumPlus}\n                                                    onChange={e => {\n                                                        this.setState({premiumPlus: !this.state.premiumPlus});\n                                                    }}\n                                                >\n                                                    NAPA Power Premium Plus\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumSteering}\n                                                    onChange={e => {\n                                                        this.setState({premiumSteering: !this.state.premiumSteering});\n                                                    }}\n                                                >\n                                                    Premium NAPA Steering\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.powerSupport}\n                                                    onChange={e => {\n                                                        this.setState({powerSupport: !this.state.powerSupport});\n                                                    }}\n                                                >\n                                                    NAPA Power Sport\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.newSteering}\n                                                    onChange={e => {\n                                                        this.setState({newSteering: !this.state.newSteering});\n                                                    }}\n                                                >\n                                                    NAPA NEW Steering\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n\n                                    {\n                                        dataAddingStatus == 0 && (\n                                            <Alert theme=\"danger\">{dataAddingError}</Alert>\n                                        )\n                                    }\n\n                                    <Container className={'btn-view'}>\n                                        <Row>\n                                            <Col>\n                                                <Button className={'play-btn'} pill onClick={() => {\n                                                    this.submitUserData();\n                                                }}>Let's Play! >></Button>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n                </div>\n            </LoadingOverlay>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataAddingStatus, error} = state.client;\n    return {\n        dataAddingStatus,\n        dataAddingError: error\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n"]},"metadata":{},"sourceType":"module"}