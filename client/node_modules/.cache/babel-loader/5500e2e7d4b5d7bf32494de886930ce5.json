{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Login.scss\";\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button, Form, FormGroup, FormInput } from \"shards-react\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      loading: false,\n      submitted: false\n    };\n\n    this.doLogin = () => {// this.setState({submitted: true});\n      // const {userName, userPassword} = this.state;\n      // const {dispatch} = this.props;\n      // if (userName && userPassword) {\n      //     dispatch(actions.doLogin({\n      //         email: userName,\n      //         password: userPassword\n      //     }));\n      // }\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      logginFailed,\n      loggedIn,\n      errorMessage\n    } = this.state;\n    return React.createElement(LoadingOverlay, {\n      active: this.state.loading,\n      spinner: true,\n      text: \"Logging In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Login\",\n      className: \"login-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Login to admin panel\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, logginFailed && React.createElement(\"div\", {\n      className: 'error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, errorMessage), loggedIn && React.createElement(\"div\", {\n      className: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Login Success\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Username\"), React.createElement(FormInput, {\n      id: \"username\",\n      type: 'email',\n      value: this.state.userName,\n      onChange: e => this.setState({\n        userName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), this.state.submitted && !this.state.userName && React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Username is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormInput, {\n      id: \"username\",\n      type: \"password\",\n      value: this.state.userPassword,\n      onChange: e => this.setState({\n        userPassword: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.submitted && !this.state.userPassword && React.createElement(\"div\", {\n      className: 'input-error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Password is required\")))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      squared: true,\n      theme: \"secondary\",\n      onClick: () => {\n        this.props.history.push(\"/admin/dashboard\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/pages-admin/Login/Login.js"],"names":["React","Component","connect","actions","Link","LoadingOverlay","Card","CardHeader","CardTitle","CardImg","CardBody","CardFooter","Button","Form","FormGroup","FormInput","Login","state","userName","userPassword","loading","submitted","doLogin","componentWillMount","componentDidMount","render","logginFailed","loggedIn","errorMessage","e","setState","target","value","props","history","push","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Login.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    Form,\n    FormGroup,\n    FormInput,\n} from \"shards-react\";\n\nclass Login extends Component {\n    state = {\n        userName: \"\",\n        userPassword: \"\",\n        loading: false,\n        submitted: false\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n\n    }\n\n    doLogin = () => {\n        // this.setState({submitted: true});\n        // const {userName, userPassword} = this.state;\n        // const {dispatch} = this.props;\n        // if (userName && userPassword) {\n        //     dispatch(actions.doLogin({\n        //         email: userName,\n        //         password: userPassword\n        //     }));\n        // }\n    }\n\n    render() {\n        const {logginFailed, loggedIn, errorMessage} = this.state;\n\n        return (\n            <LoadingOverlay\n                active={this.state.loading}\n                spinner\n                text='Logging In'\n            >\n                <div className=\"login-page-container\">\n                    <Card title=\"Login\" className=\"login-card\">\n                        <CardHeader><h3>Login to admin panel</h3></CardHeader>\n                        <CardBody>\n\n                            {\n                                logginFailed && (\n                                    <div className={'error'}>{errorMessage}</div>\n                                )\n                            }\n                            {\n                                loggedIn && (\n                                    <div className={\"success\"}>Login Success</div>\n                                )\n                            }\n                            <Form>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Username</label>\n                                    <FormInput\n                                        id=\"username\"\n                                        type={'email'}\n                                        value={this.state.userName}\n                                        onChange={(e) => this.setState({userName: e.target.value})}\n                                    />\n\n                                    {\n                                        (this.state.submitted && !this.state.userName) && (\n                                            <div className={'input-error'}>\n                                                Username is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Password</label>\n                                    <FormInput id=\"username\"\n                                               type={\"password\"}\n                                               value={this.state.userPassword}\n                                               onChange={(e) => this.setState({userPassword: e.target.value})}/>\n                                    {\n                                        (this.state.submitted && !this.state.userPassword) && (\n                                            <div className={'input-error'}>\n                                                Password is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                            </Form>\n\n\n                        </CardBody>\n                        <CardFooter>\n                            <Button block squared theme=\"secondary\" onClick={() => {\n                                this.props.history.push(\"/admin/dashboard\");\n                            }}>\n                                Login\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n}\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}