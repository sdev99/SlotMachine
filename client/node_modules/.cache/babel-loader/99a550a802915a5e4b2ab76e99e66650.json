{"ast":null,"code":"import axios from 'axios';\nimport { userConstants, apiUrl } from '../constants';\nexport const doLogin = data => {\n  return dispatch => {\n    dispatch(request());\n    return axios.post(`${apiUrl}login`, data).then(({\n      data\n    }) => {\n      if (data.status) {\n        dispatch(success(data.data));\n        localStorage.setItem('user_data', JSON.stringify({\n          id: data.data._id,\n          name: data.data.name,\n          email: data.data.email\n        }));\n      } else {\n        dispatch(failure(data.message));\n      }\n    }).catch(error => {\n      throw error;\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.LOGIN_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n};\nexport const submitUserData = data => {\n  return dispatch => {\n    dispatch(request());\n    return axios.post(`${apiUrl}addUserData`, data).then(({\n      data\n    }) => {\n      if (data.status) {\n        dispatch(success(null));\n      } else {\n        dispatch(failure(data.message));\n      }\n    }).catch(error => {\n      throw error;\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.USERDATA_SUBMIT_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.USERDATA_SUBMIT_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.USERDATA_SUBMIT_FAILURE,\n      error\n    };\n  }\n};\nexport const updateUserData = data => {\n  return dispatch => {\n    dispatch(request());\n    return axios.post(`${apiUrl}updateUserData`, data).then(({\n      data\n    }) => {\n      if (data.status) {\n        dispatch(success(data.data));\n      } else {\n        dispatch(failure(data.message));\n      }\n    }).catch(error => {\n      throw error;\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.USERDATA_SUBMIT_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.USERDATA_SUBMIT_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.USERDATA_SUBMIT_FAILURE,\n      error\n    };\n  }\n};\nexport const userDataList = data => {\n  return dispatch => {\n    dispatch(request());\n    return axios.get(`${apiUrl}userDataList`).then(({\n      data\n    }) => {\n      if (data.status) {\n        dispatch(success(data.data));\n      } else {\n        dispatch(failure(data.message));\n      }\n    }).catch(error => {\n      throw error;\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.USERDATA_LIST_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.USERDATA_LIST_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.USERDATA_LIST_FAILURE,\n      error\n    };\n  }\n};\nexport const deleteUserData = data => {\n  return dispatch => {\n    dispatch(request());\n    return axios.post(`${apiUrl}deleteUserData`, data).then(({\n      data\n    }) => {\n      if (data.status) {\n        dispatch(success(data.data));\n      } else {\n        dispatch(failure(data.message));\n      }\n    }).catch(error => {\n      throw error;\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.USERDATA_DELETE_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: userConstants.USERDATA_DELETE_SUCCESS,\n      data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.USERDATA_DELETE_FAILURE,\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Volumes/Transcend/Projects/NayabN_AzzkaNoor/SlotMachine/slotmachine/client/src/actions/user.actions.js"],"names":["axios","userConstants","apiUrl","doLogin","data","dispatch","request","post","then","status","success","localStorage","setItem","JSON","stringify","id","_id","name","email","failure","message","catch","error","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","submitUserData","USERDATA_SUBMIT_REQUEST","USERDATA_SUBMIT_SUCCESS","USERDATA_SUBMIT_FAILURE","updateUserData","userDataList","get","USERDATA_LIST_REQUEST","USERDATA_LIST_SUCCESS","USERDATA_LIST_FAILURE","deleteUserData","USERDATA_DELETE_REQUEST","USERDATA_DELETE_SUCCESS","USERDATA_DELETE_FAILURE"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {userConstants, apiUrl} from '../constants';\n\n\nexport const doLogin = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}login`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                    localStorage.setItem('user_data', JSON.stringify({\n                        id: data.data._id,\n                        name: data.data.name,\n                        email: data.data.email\n                    }));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.LOGIN_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.LOGIN_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.LOGIN_FAILURE, error}\n    }\n};\n\nexport const submitUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}addUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(null));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_SUBMIT_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_SUBMIT_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_SUBMIT_FAILURE, error}\n    }\n};\n\nexport const updateUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}updateUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_SUBMIT_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_SUBMIT_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_SUBMIT_FAILURE, error}\n    }\n};\n\n\nexport const userDataList = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.get(`${apiUrl}userDataList`)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_LIST_REQUEST};\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_LIST_SUCCESS, data};\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_LIST_FAILURE, error};\n    }\n};\n\nexport const deleteUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}deleteUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_DELETE_REQUEST};\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_DELETE_SUCCESS, data};\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_DELETE_FAILURE, error};\n    }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}